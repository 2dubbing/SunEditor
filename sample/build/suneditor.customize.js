/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./sample/customize_ex.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./sample/customize_ex.js":
/*!********************************!*\
  !*** ./sample/customize_ex.js ***!
  \********************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _src_suneditor__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../src/suneditor */ \"./src/suneditor.js\");\n/* harmony import */ var _test_dev_custom_plugin_submenu__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../test/dev/custom_plugin_submenu */ \"./test/dev/custom_plugin_submenu.js\");\n// import '../src/assets/css/suneditor.css'\n// import '../src/assets/css/suneditor-contents.css'\n\n\n\n\n_src_suneditor__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(document.getElementById('ex_submenu'), {\n  plugins: [_test_dev_custom_plugin_submenu__WEBPACK_IMPORTED_MODULE_1__[\"default\"]],\n  buttonList: [['undo', 'redo'], [{\n    // plugin's name attribute\n    name: 'custom_plugin_submenu',\n    // name of the plugin to be recognized by the toolbar.\n    // It must be the same as the name attribute of the plugin \n    dataCommand: 'custom_plugin_submenu',\n    // button's class (\"btn_editor\" class is registered, basic button click css is applied.)\n    buttonClass: 'btn_editor',\n    // HTML title attribute\n    title: 'Custom plugin of the submenu',\n    // 'submenu' or 'dialog' or '' (command button)\n    dataDisplay: 'submenu',\n    // 'full' or '' (Only applies to dialog plugin.)\n    displayOption: '',\n    // HTML to be append to button\n    innerHTML: '<div class=\"icon-map-pin\"></div>'\n  }]]\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zYW1wbGUvY3VzdG9taXplX2V4LmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc2FtcGxlL2N1c3RvbWl6ZV9leC5qcz9jZTNkIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCAnLi4vc3JjL2Fzc2V0cy9jc3Mvc3VuZWRpdG9yLmNzcydcclxuLy8gaW1wb3J0ICcuLi9zcmMvYXNzZXRzL2Nzcy9zdW5lZGl0b3ItY29udGVudHMuY3NzJ1xyXG4ndXNlIHN0cmljdCc7XHJcblxyXG5pbXBvcnQgc3VuZWRpdG9yIGZyb20gJy4uL3NyYy9zdW5lZGl0b3InO1xyXG5pbXBvcnQgY3VzdG9tX3BsdWdpbl9zdWJtZW51IGZyb20gJy4uL3Rlc3QvZGV2L2N1c3RvbV9wbHVnaW5fc3VibWVudSc7XHJcblxyXG5zdW5lZGl0b3IuY3JlYXRlKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdleF9zdWJtZW51JyksIHtcclxuICAgIHBsdWdpbnM6IFtcclxuICAgICAgICBjdXN0b21fcGx1Z2luX3N1Ym1lbnVcclxuICAgIF0sXHJcbiAgICBidXR0b25MaXN0OiBbXHJcbiAgICAgICAgWyd1bmRvJywgJ3JlZG8nXSxcclxuICAgICAgICBbXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIC8vIHBsdWdpbidzIG5hbWUgYXR0cmlidXRlXHJcbiAgICAgICAgICAgICAgICBuYW1lOiAnY3VzdG9tX3BsdWdpbl9zdWJtZW51JywgXHJcbiAgICAgICAgICAgICAgICAvLyBuYW1lIG9mIHRoZSBwbHVnaW4gdG8gYmUgcmVjb2duaXplZCBieSB0aGUgdG9vbGJhci5cclxuICAgICAgICAgICAgICAgIC8vIEl0IG11c3QgYmUgdGhlIHNhbWUgYXMgdGhlIG5hbWUgYXR0cmlidXRlIG9mIHRoZSBwbHVnaW4gXHJcbiAgICAgICAgICAgICAgICBkYXRhQ29tbWFuZDogJ2N1c3RvbV9wbHVnaW5fc3VibWVudScsXHJcbiAgICAgICAgICAgICAgICAvLyBidXR0b24ncyBjbGFzcyAoXCJidG5fZWRpdG9yXCIgY2xhc3MgaXMgcmVnaXN0ZXJlZCwgYmFzaWMgYnV0dG9uIGNsaWNrIGNzcyBpcyBhcHBsaWVkLilcclxuICAgICAgICAgICAgICAgIGJ1dHRvbkNsYXNzOididG5fZWRpdG9yJywgXHJcbiAgICAgICAgICAgICAgICAvLyBIVE1MIHRpdGxlIGF0dHJpYnV0ZVxyXG4gICAgICAgICAgICAgICAgdGl0bGU6J0N1c3RvbSBwbHVnaW4gb2YgdGhlIHN1Ym1lbnUnLCBcclxuICAgICAgICAgICAgICAgIC8vICdzdWJtZW51JyBvciAnZGlhbG9nJyBvciAnJyAoY29tbWFuZCBidXR0b24pXHJcbiAgICAgICAgICAgICAgICBkYXRhRGlzcGxheTonc3VibWVudScsXHJcbiAgICAgICAgICAgICAgICAvLyAnZnVsbCcgb3IgJycgKE9ubHkgYXBwbGllcyB0byBkaWFsb2cgcGx1Z2luLilcclxuICAgICAgICAgICAgICAgIGRpc3BsYXlPcHRpb246JycsXHJcbiAgICAgICAgICAgICAgICAvLyBIVE1MIHRvIGJlIGFwcGVuZCB0byBidXR0b25cclxuICAgICAgICAgICAgICAgIGlubmVySFRNTDonPGRpdiBjbGFzcz1cImljb24tbWFwLXBpblwiPjwvZGl2PidcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIF1cclxuICAgIF1cclxufSk7Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBR0E7QUFJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFmQTtBQVBBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./sample/customize_ex.js\n");

/***/ }),

/***/ "./src/lang/en.js":
/*!************************!*\
  !*** ./src/lang/en.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  toolbar: {\n    save: 'Save',\n    font: 'Font',\n    formats: 'Formats',\n    fontSize: 'Size',\n    bold: 'Bold',\n    underline: 'Underline',\n    italic: 'Italic',\n    strike: 'Strike',\n    subscript: 'Subscript',\n    superscript: 'Superscript',\n    removeFormat: 'Remove Format',\n    fontColor: 'Font Color',\n    hiliteColor: 'Hilite Color',\n    indent: 'Indent',\n    outdent: 'Outdent',\n    align: 'Align',\n    alignLeft: 'Align left',\n    alignRight: 'Align right',\n    alignCenter: 'Align center',\n    justifyFull: 'Justify full',\n    list: 'list',\n    orderList: 'Ordered list',\n    unorderList: 'Unordered list',\n    horizontalRule: 'horizontal line',\n    hr_solid: 'solid',\n    hr_dotted: 'dotted',\n    hr_dashed: 'dashed',\n    table: 'Table',\n    link: 'Link',\n    image: 'Image',\n    video: 'Video',\n    fullScreen: 'Full screen',\n    showBlocks: 'Show blocks',\n    codeView: 'Code view',\n    undo: 'Undo',\n    redo: 'Redo',\n    preview: 'Preview',\n    print: 'print',\n    tag_p: 'Paragraph',\n    tag_div: 'Normal (DIV)',\n    tag_h: 'Header',\n    tag_quote: 'Quote',\n    pre: 'Code'\n  },\n  dialogBox: {\n    linkBox: {\n      title: 'Insert Link',\n      url: 'URL to link',\n      text: 'Text to display',\n      newWindowCheck: 'Open in new window'\n    },\n    imageBox: {\n      title: 'Insert image',\n      file: 'Select from files',\n      url: 'Image URL',\n      altText: 'Alternative text'\n    },\n    videoBox: {\n      title: 'Insert Video',\n      url: 'Media embed URL, YouTube'\n    },\n    caption: 'Insert description',\n    close: 'Close',\n    submitButton: 'Submit',\n    revertButton: 'Revert',\n    proportion: 'constrain proportions',\n    width: 'Width',\n    height: 'Height',\n    basic: 'Basic',\n    left: 'Left',\n    right: 'Right',\n    center: 'Center'\n  },\n  controller: {\n    edit: 'Edit',\n    remove: 'Remove',\n    insertRowAbove: 'Insert row above',\n    insertRowBelow: 'Insert row below',\n    deleteRow: 'Delete row',\n    insertColumnBefore: 'Insert column before',\n    insertColumnAfter: 'Insert column after',\n    deleteColumn: 'Delete column',\n    resize100: 'Resize 100%',\n    resize75: 'Resize 75%',\n    resize50: 'Resize 50%',\n    resize25: 'Resize 25%',\n    mirrorHorizontal: 'Mirror, Horizontal',\n    mirrorVertical: 'Mirror, Vertical',\n    rotateLeft: 'Rotate left',\n    rotateRight: 'Rotate right'\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGFuZy9lbi5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9sYW5nL2VuLmpzPzNmYWIiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogd3lzaXd5ZyB3ZWIgZWRpdG9yXHJcbiAqXHJcbiAqIHN1bmVkaXRvci5qc1xyXG4gKiBDb3B5cmlnaHQgMjAxNyBKaUhvbmcgTGVlLlxyXG4gKiBNSVQgbGljZW5zZS5cclxuICovXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIHRvb2xiYXI6IHtcclxuICAgICAgICBzYXZlOiAnU2F2ZScsXHJcbiAgICAgICAgZm9udDogJ0ZvbnQnLFxyXG4gICAgICAgIGZvcm1hdHM6ICdGb3JtYXRzJyxcclxuICAgICAgICBmb250U2l6ZTogJ1NpemUnLFxyXG4gICAgICAgIGJvbGQ6ICdCb2xkJyxcclxuICAgICAgICB1bmRlcmxpbmU6ICdVbmRlcmxpbmUnLFxyXG4gICAgICAgIGl0YWxpYzogJ0l0YWxpYycsXHJcbiAgICAgICAgc3RyaWtlOiAnU3RyaWtlJyxcclxuICAgICAgICBzdWJzY3JpcHQ6ICdTdWJzY3JpcHQnLFxyXG4gICAgICAgIHN1cGVyc2NyaXB0OiAnU3VwZXJzY3JpcHQnLFxyXG4gICAgICAgIHJlbW92ZUZvcm1hdDogJ1JlbW92ZSBGb3JtYXQnLFxyXG4gICAgICAgIGZvbnRDb2xvcjogJ0ZvbnQgQ29sb3InLFxyXG4gICAgICAgIGhpbGl0ZUNvbG9yOiAnSGlsaXRlIENvbG9yJyxcclxuICAgICAgICBpbmRlbnQ6ICdJbmRlbnQnLFxyXG4gICAgICAgIG91dGRlbnQ6ICdPdXRkZW50JyxcclxuICAgICAgICBhbGlnbjogJ0FsaWduJyxcclxuICAgICAgICBhbGlnbkxlZnQ6ICdBbGlnbiBsZWZ0JyxcclxuICAgICAgICBhbGlnblJpZ2h0OiAnQWxpZ24gcmlnaHQnLFxyXG4gICAgICAgIGFsaWduQ2VudGVyOiAnQWxpZ24gY2VudGVyJyxcclxuICAgICAgICBqdXN0aWZ5RnVsbDogJ0p1c3RpZnkgZnVsbCcsXHJcbiAgICAgICAgbGlzdDogJ2xpc3QnLFxyXG4gICAgICAgIG9yZGVyTGlzdDogJ09yZGVyZWQgbGlzdCcsXHJcbiAgICAgICAgdW5vcmRlckxpc3Q6ICdVbm9yZGVyZWQgbGlzdCcsXHJcbiAgICAgICAgaG9yaXpvbnRhbFJ1bGU6ICdob3Jpem9udGFsIGxpbmUnLFxyXG4gICAgICAgIGhyX3NvbGlkOiAnc29saWQnLFxyXG4gICAgICAgIGhyX2RvdHRlZDogJ2RvdHRlZCcsXHJcbiAgICAgICAgaHJfZGFzaGVkOiAnZGFzaGVkJyxcclxuICAgICAgICB0YWJsZTogJ1RhYmxlJyxcclxuICAgICAgICBsaW5rOiAnTGluaycsXHJcbiAgICAgICAgaW1hZ2U6ICdJbWFnZScsXHJcbiAgICAgICAgdmlkZW86ICdWaWRlbycsXHJcbiAgICAgICAgZnVsbFNjcmVlbjogJ0Z1bGwgc2NyZWVuJyxcclxuICAgICAgICBzaG93QmxvY2tzOiAnU2hvdyBibG9ja3MnLFxyXG4gICAgICAgIGNvZGVWaWV3OiAnQ29kZSB2aWV3JyxcclxuICAgICAgICB1bmRvOiAnVW5kbycsXHJcbiAgICAgICAgcmVkbzogJ1JlZG8nLFxyXG4gICAgICAgIHByZXZpZXc6ICdQcmV2aWV3JyxcclxuICAgICAgICBwcmludDogJ3ByaW50JyxcclxuICAgICAgICB0YWdfcDogJ1BhcmFncmFwaCcsXHJcbiAgICAgICAgdGFnX2RpdjogJ05vcm1hbCAoRElWKScsXHJcbiAgICAgICAgdGFnX2g6ICdIZWFkZXInLFxyXG4gICAgICAgIHRhZ19xdW90ZTogJ1F1b3RlJyxcclxuICAgICAgICBwcmU6ICdDb2RlJ1xyXG4gICAgfSxcclxuICAgIGRpYWxvZ0JveDoge1xyXG4gICAgICAgIGxpbmtCb3g6IHtcclxuICAgICAgICAgICAgdGl0bGU6ICdJbnNlcnQgTGluaycsXHJcbiAgICAgICAgICAgIHVybDogJ1VSTCB0byBsaW5rJyxcclxuICAgICAgICAgICAgdGV4dDogJ1RleHQgdG8gZGlzcGxheScsXHJcbiAgICAgICAgICAgIG5ld1dpbmRvd0NoZWNrOiAnT3BlbiBpbiBuZXcgd2luZG93J1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgaW1hZ2VCb3g6IHtcclxuICAgICAgICAgICAgdGl0bGU6ICdJbnNlcnQgaW1hZ2UnLFxyXG4gICAgICAgICAgICBmaWxlOiAnU2VsZWN0IGZyb20gZmlsZXMnLFxyXG4gICAgICAgICAgICB1cmw6ICdJbWFnZSBVUkwnLFxyXG4gICAgICAgICAgICBhbHRUZXh0OiAnQWx0ZXJuYXRpdmUgdGV4dCdcclxuICAgICAgICB9LFxyXG4gICAgICAgIHZpZGVvQm94OiB7XHJcbiAgICAgICAgICAgIHRpdGxlOiAnSW5zZXJ0IFZpZGVvJyxcclxuICAgICAgICAgICAgdXJsOiAnTWVkaWEgZW1iZWQgVVJMLCBZb3VUdWJlJ1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgY2FwdGlvbjogJ0luc2VydCBkZXNjcmlwdGlvbicsXHJcbiAgICAgICAgY2xvc2U6ICdDbG9zZScsXHJcbiAgICAgICAgc3VibWl0QnV0dG9uOiAnU3VibWl0JyxcclxuICAgICAgICByZXZlcnRCdXR0b246ICdSZXZlcnQnLFxyXG4gICAgICAgIHByb3BvcnRpb246ICdjb25zdHJhaW4gcHJvcG9ydGlvbnMnLFxyXG4gICAgICAgIHdpZHRoOiAnV2lkdGgnLFxyXG4gICAgICAgIGhlaWdodDogJ0hlaWdodCcsXHJcbiAgICAgICAgYmFzaWM6ICdCYXNpYycsXHJcbiAgICAgICAgbGVmdDogJ0xlZnQnLFxyXG4gICAgICAgIHJpZ2h0OiAnUmlnaHQnLFxyXG4gICAgICAgIGNlbnRlcjogJ0NlbnRlcidcclxuICAgIH0sXHJcbiAgICBjb250cm9sbGVyOiB7XHJcbiAgICAgICAgZWRpdDogJ0VkaXQnLFxyXG4gICAgICAgIHJlbW92ZTogJ1JlbW92ZScsXHJcbiAgICAgICAgaW5zZXJ0Um93QWJvdmU6ICdJbnNlcnQgcm93IGFib3ZlJyxcclxuICAgICAgICBpbnNlcnRSb3dCZWxvdzogJ0luc2VydCByb3cgYmVsb3cnLFxyXG4gICAgICAgIGRlbGV0ZVJvdzogJ0RlbGV0ZSByb3cnLFxyXG4gICAgICAgIGluc2VydENvbHVtbkJlZm9yZTogJ0luc2VydCBjb2x1bW4gYmVmb3JlJyxcclxuICAgICAgICBpbnNlcnRDb2x1bW5BZnRlcjogJ0luc2VydCBjb2x1bW4gYWZ0ZXInLFxyXG4gICAgICAgIGRlbGV0ZUNvbHVtbjogJ0RlbGV0ZSBjb2x1bW4nLFxyXG4gICAgICAgIHJlc2l6ZTEwMDogJ1Jlc2l6ZSAxMDAlJyxcclxuICAgICAgICByZXNpemU3NTogJ1Jlc2l6ZSA3NSUnLFxyXG4gICAgICAgIHJlc2l6ZTUwOiAnUmVzaXplIDUwJScsXHJcbiAgICAgICAgcmVzaXplMjU6ICdSZXNpemUgMjUlJyxcclxuICAgICAgICBtaXJyb3JIb3Jpem9udGFsOiAnTWlycm9yLCBIb3Jpem9udGFsJyxcclxuICAgICAgICBtaXJyb3JWZXJ0aWNhbDogJ01pcnJvciwgVmVydGljYWwnLFxyXG4gICAgICAgIHJvdGF0ZUxlZnQ6ICdSb3RhdGUgbGVmdCcsXHJcbiAgICAgICAgcm90YXRlUmlnaHQ6ICdSb3RhdGUgcmlnaHQnXHJcbiAgICB9XHJcbn07XHJcbiJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEzQ0E7QUE2Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBSkE7QUFNQTtBQUNBO0FBQ0E7QUFGQTtBQUlBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUEzQkE7QUE2QkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWhCQTtBQTNFQSIsInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/lang/en.js\n");

/***/ }),

/***/ "./src/lib/constructor.js":
/*!********************************!*\
  !*** ./src/lib/constructor.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/lib/util.js\");\n/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n\n\n\n/**\r\n * @description document create - call _createToolBar()\r\n * @param {element} element - textarea\r\n * @param {JSON} options - user options\r\n * @param {JSON} lang - user language\r\n * @param {JSON} _plugins - plugins object\r\n * @returns {JSON}\r\n * @private\r\n */\n\nconst _Constructor = {\n  init: function (element, options, lang, _plugins) {\n    if (typeof options !== 'object') options = {};\n    /** user options */\n\n    options.lang = lang; // toolbar\n\n    options.mode = options.mode || 'classic'; // classic, inline, balloon\n\n    options.toolbarWidth = options.toolbarWidth ? /^\\d+$/.test(options.toolbarWidth) ? options.toolbarWidth + 'px' : options.toolbarWidth : 'max-content';\n    options.stickyToolbar = /balloon/i.test(options.mode) ? -1 : options.stickyToolbar === undefined ? 0 : /\\d+/.test(options.stickyToolbar) ? options.stickyToolbar.toString().match(/\\d+/)[0] * 1 : -1; // bottom resizing bar\n\n    options.resizingBar = /inline|balloon/i.test(options.mode) ? false : options.resizingBar === undefined ? true : options.resizingBar;\n    options.showPathLabel = typeof options.showPathLabel === 'boolean' ? options.showPathLabel : true; // popup, editor display\n\n    options.popupDisplay = options.popupDisplay || 'full';\n    options.display = options.display || (element.style.display === 'none' || !element.style.display ? 'block' : element.style.display); // size\n\n    options.width = options.width ? /^\\d+$/.test(options.width) ? options.width + 'px' : options.width : element.clientWidth ? element.clientWidth + 'px' : '100%';\n    options.height = options.height ? /^\\d+$/.test(options.height) ? options.height + 'px' : options.height : element.clientHeight ? element.clientHeight + 'px' : 'auto';\n    options.minHeight = (/^\\d+$/.test(options.minHeight) ? options.height + 'px' : options.minHeight) || '';\n    options.maxHeight = (/^\\d+$/.test(options.maxHeight) ? options.maxHeight + 'px' : options.maxHeight) || ''; // font, size, color list\n\n    options.font = options.font || null;\n    options.fontSize = options.fontSize || null;\n    options.colorList = options.colorList || null; // images\n\n    options.imageResizing = options.imageResizing === undefined ? true : options.imageResizing;\n    options.imageWidth = options.imageWidth || 'auto';\n    options.imageFileInput = options.imageFileInput === undefined ? true : options.imageFileInput;\n    options.imageUrlInput = options.imageUrlInput === undefined || !options.imageFileInput ? true : options.imageUrlInput;\n    options.imageUploadUrl = options.imageUploadUrl || null; // video\n\n    options.videoResizing = options.videoResizing === undefined ? true : options.videoResizing;\n    options.videoWidth = options.videoWidth || 560;\n    options.videoHeight = options.videoHeight || 315; // callBack function\n    // options.callBackSave = options.callBackSave;\n    // buttons\n\n    options.buttonList = options.buttonList || [['undo', 'redo'], ['bold', 'underline', 'italic', 'strike', 'subscript', 'superscript'], ['removeFormat'], ['indent', 'outdent'], ['fullScreen', 'showBlocks', 'codeView'], ['preview', 'print']];\n    const doc = document;\n    /** suneditor div */\n\n    const top_div = doc.createElement('DIV');\n    top_div.className = 'sun-editor';\n    if (element.id) top_div.id = 'suneditor_' + element.id;\n    top_div.style.width = options.width;\n    top_div.style.display = options.display;\n    /** relative div */\n\n    const relative = doc.createElement('DIV');\n    relative.className = 'sun-editor-container';\n    /** toolbar */\n\n    const tool_bar = this._createToolBar(doc, options.buttonList, _plugins, lang);\n\n    let arrow = null;\n\n    if (/inline|balloon/i.test(options.mode)) {\n      tool_bar.element.className += ' sun-inline-toolbar';\n      tool_bar.element.style.width = options.toolbarWidth;\n\n      if (/balloon/i.test(options.mode)) {\n        arrow = doc.createElement('DIV');\n        arrow.className = 'arrow';\n        tool_bar.element.appendChild(arrow);\n      }\n    }\n    /** sticky toolbar dummy */\n\n\n    const sticky_dummy = doc.createElement('DIV');\n    sticky_dummy.className = 'sun-editor-sticky-dummy';\n    /** inner editor div */\n\n    const editor_div = doc.createElement('DIV');\n    editor_div.className = 'sun-editor-id-editorArea';\n    /** wysiwyg div */\n\n    const wysiwyg_div = doc.createElement('DIV');\n    wysiwyg_div.setAttribute('contenteditable', true);\n    wysiwyg_div.setAttribute('scrolling', 'auto');\n    wysiwyg_div.className = 'input_editor sun-editor-id-wysiwyg sun-editor-editable';\n    wysiwyg_div.style.display = 'block';\n    wysiwyg_div.innerHTML = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertContentsForEditor(element.value);\n    wysiwyg_div.style.height = options.height;\n    wysiwyg_div.style.minHeight = options.minHeight;\n    wysiwyg_div.style.maxHeight = options.maxHeight;\n    /** textarea for code view */\n\n    const textarea = doc.createElement('TEXTAREA');\n    textarea.className = 'input_editor sun-editor-id-code';\n    textarea.style.display = 'none';\n    textarea.style.height = options.height;\n    textarea.style.minHeight = options.minHeight;\n    textarea.style.maxHeight = options.maxHeight;\n    /** resize bar */\n\n    let resizing_bar = null;\n\n    if (options.resizingBar) {\n      resizing_bar = doc.createElement('DIV');\n      resizing_bar.className = 'sun-editor-id-resizingBar sun-editor-common';\n    }\n    /** navigation */\n\n\n    const navigation = doc.createElement('SPAN');\n    navigation.className = 'sun-editor-id-navigation sun-editor-common';\n    /** loading box */\n\n    const loading_box = doc.createElement('DIV');\n    loading_box.className = 'sun-editor-id-loading sun-editor-common';\n    loading_box.innerHTML = '<div class=\"loading-effect\"></div>';\n    /** resize operation background */\n\n    const resize_back = doc.createElement('DIV');\n    resize_back.className = 'sun-editor-id-resize-background';\n    /** append html */\n\n    editor_div.appendChild(wysiwyg_div);\n    editor_div.appendChild(textarea);\n    relative.appendChild(tool_bar.element);\n    relative.appendChild(sticky_dummy);\n    relative.appendChild(editor_div);\n    relative.appendChild(resize_back);\n    relative.appendChild(loading_box);\n\n    if (resizing_bar) {\n      resizing_bar.appendChild(navigation);\n      relative.appendChild(resizing_bar);\n    }\n\n    top_div.appendChild(relative);\n    return {\n      constructed: {\n        _top: top_div,\n        _relative: relative,\n        _toolBar: tool_bar.element,\n        _editorArea: editor_div,\n        _wysiwygArea: wysiwyg_div,\n        _codeArea: textarea,\n        _resizingBar: resizing_bar,\n        _navigation: navigation,\n        _loading: loading_box,\n        _resizeBack: resize_back,\n        _stickyDummy: sticky_dummy,\n        _arrow: arrow\n      },\n      options: options,\n      plugins: tool_bar.plugins\n    };\n  },\n\n  /**\r\n   * @description Suneditor's Default button list\r\n   * @private\r\n   */\n  _defaultButtons: function (lang) {\n    return {\n      /** command */\n      bold: ['sun-editor-id-bold', lang.toolbar.bold + '(Ctrl+B)', 'bold', '', '<div class=\"icon-bold\"></div>'],\n      underline: ['sun-editor-id-underline', lang.toolbar.underline + '(Ctrl+U)', 'underline', '', '<div class=\"icon-underline\"></div>'],\n      italic: ['sun-editor-id-italic', lang.toolbar.italic + '(Ctrl+I)', 'italic', '', '<div class=\"icon-italic\"></div>'],\n      strike: ['sun-editor-id-strike', lang.toolbar.strike + '(Ctrl+SHIFT+S)', 'strikethrough', '', '<div class=\"icon-strokethrough\"></div>'],\n      subscript: ['sun-editor-id-subscript', lang.toolbar.subscript, 'subscript', '', '<div class=\"icon-subscript\"></div>'],\n      superscript: ['sun-editor-id-superscript', lang.toolbar.superscript, 'superscript', '', '<div class=\"icon-superscript\"></div>'],\n      removeFormat: ['', lang.toolbar.removeFormat, 'removeFormat', '', '<div class=\"icon-erase\"></div>'],\n      indent: ['', lang.toolbar.indent + '(Ctrl + ])', 'indent', '', '<div class=\"icon-indent-right\"></div>'],\n      outdent: ['', lang.toolbar.outdent + '(Ctrl + [)', 'outdent', '', '<div class=\"icon-indent-left\"></div>'],\n      fullScreen: ['code-view-enabled', lang.toolbar.fullScreen, 'fullScreen', '', '<div class=\"icon-expansion\"></div>'],\n      showBlocks: ['', lang.toolbar.showBlocks, 'showBlocks', '', '<div class=\"icon-showBlocks\"></div>'],\n      codeView: ['code-view-enabled', lang.toolbar.codeView, 'codeView', '', '<div class=\"icon-code-view\"></div>'],\n      undo: ['code-view-enabled', lang.toolbar.undo + ' (Ctrl+Z)', 'undo', '', '<div class=\"icon-undo\"></div>'],\n      redo: ['code-view-enabled', lang.toolbar.redo + ' (Ctrl+Y)', 'redo', '', '<div class=\"icon-redo\"></div>'],\n      preview: ['', lang.toolbar.preview, 'preview', '', '<div class=\"icon-preview\"></div>'],\n      print: ['', lang.toolbar.print, 'print', '', '<div class=\"icon-print\"></div>'],\n      save: ['', lang.toolbar.save, 'save', '', '<div class=\"icon-save\"></div>'],\n\n      /** plugins - submenu */\n      font: ['btn_font', lang.toolbar.font, 'font', 'submenu', '<span class=\"txt sun-editor-font-family\">' + lang.toolbar.font + '</span><span class=\"icon-arrow-down\"></span>'],\n      formatBlock: ['btn_format', lang.toolbar.formats, 'formatBlock', 'submenu', '<span class=\"txt sun-editor-font-format\">' + lang.toolbar.formats + '</span><span class=\"icon-arrow-down\"></span>'],\n      fontSize: ['btn_size', lang.toolbar.fontSize, 'fontSize', 'submenu', '<span class=\"txt sun-editor-font-size\">' + lang.toolbar.fontSize + '</span><span class=\"icon-arrow-down\"></span>'],\n      fontColor: ['', lang.toolbar.fontColor, 'fontColor', 'submenu', '<div class=\"icon-fontColor\"></div>'],\n      hiliteColor: ['', lang.toolbar.hiliteColor, 'hiliteColor', 'submenu', '<div class=\"icon-hiliteColor\"></div>'],\n      align: ['btn_align', lang.toolbar.align, 'align', 'submenu', '<div class=\"icon-align-left\"></div>'],\n      list: ['', lang.toolbar.list, 'list', 'submenu', '<div class=\"icon-list-number\"></div>'],\n      horizontalRule: ['btn_line', lang.toolbar.horizontalRule, 'horizontalRule', 'submenu', '<div class=\"icon-hr\"></div>'],\n      table: ['', lang.toolbar.table, 'table', 'submenu', '<div class=\"icon-grid\"></div>'],\n\n      /** plugins - dialog */\n      link: ['', lang.toolbar.link, 'link', 'dialog', '<div class=\"icon-link\"></div>'],\n      image: ['', lang.toolbar.image, 'image', 'dialog', '<div class=\"icon-image\"></div>'],\n      video: ['', lang.toolbar.video, 'video', 'dialog', '<div class=\"icon-video\"></div>']\n    };\n  },\n\n  /**\r\n   * @description Create a group div containing each module\r\n   * @returns {Element}\r\n   * @private\r\n   */\n  _createModuleGroup: function (oneModule) {\n    const oDiv = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('DIV');\n    oDiv.className = 'tool_module' + (oneModule ? '' : ' sun-editor-module-border');\n    const oUl = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('UL');\n    oUl.className = 'editor_tool';\n    oDiv.appendChild(oUl);\n    return {\n      'div': oDiv,\n      'ul': oUl\n    };\n  },\n\n  /**\r\n   * @description Create a button element\r\n   * @param {string} buttonClass - className in button\r\n   * @param {string} title - Title in button\r\n   * @param {string} dataCommand - The data-command property of the button\r\n   * @param {string} dataDisplay - The data-display property of the button ('dialog', 'submenu')\r\n   * @param {string} innerHTML - Html in button\r\n   * @returns {Element}\r\n   * @private\r\n   */\n  _createButton: function (buttonClass, title, dataCommand, dataDisplay, innerHTML) {\n    const oLi = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('LI');\n    const oButton = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('BUTTON');\n    oButton.setAttribute('type', 'button');\n    oButton.setAttribute('class', 'btn_editor ' + buttonClass);\n    oButton.setAttribute('title', title);\n    oButton.setAttribute('data-command', dataCommand);\n    oButton.setAttribute('data-display', dataDisplay);\n    oButton.innerHTML = innerHTML;\n    oLi.appendChild(oButton);\n    return {\n      'li': oLi,\n      'button': oButton\n    };\n  },\n\n  /**\r\n   * @description Create editor HTML\r\n   * @param {Array} doc - document object\r\n   * @param {Array} buttonList - option.buttonList\r\n   * @param {Array} lang - option.lang\r\n   * @private\r\n   */\n  _createToolBar: function (doc, buttonList, _plugins, lang) {\n    const separator_vertical = doc.createElement('DIV');\n    separator_vertical.className = 'sun-editor-toolbar-separator-vertical';\n    const tool_bar = doc.createElement('DIV');\n    tool_bar.className = 'sun-editor-id-toolbar sun-editor-common';\n    /** create button list */\n\n    const defaultButtonList = this._defaultButtons(lang);\n\n    const plugins = {};\n\n    if (_plugins) {\n      const pluginsValues = _plugins.length ? _plugins : Object.keys(_plugins).map(function (e) {\n        return _plugins[e];\n      });\n\n      for (let i = 0, len = pluginsValues.length; i < len; i++) {\n        plugins[pluginsValues[i].name] = pluginsValues[i];\n      }\n    }\n\n    let module = null;\n    let button = null;\n    let moduleElement = null;\n    let buttonElement = null;\n    let pluginName = '';\n    let vertical = false;\n    const oneModule = buttonList.length === 1;\n\n    for (let i = 0; i < buttonList.length; i++) {\n      const buttonGroup = buttonList[i];\n      moduleElement = this._createModuleGroup(oneModule);\n      /** button object */\n\n      if (typeof buttonGroup === 'object') {\n        for (let j = 0; j < buttonGroup.length; j++) {\n          button = buttonGroup[j];\n\n          if (typeof button === 'object') {\n            if (typeof button.add === 'function') {\n              pluginName = button.name;\n              module = defaultButtonList[pluginName];\n              plugins[pluginName] = button;\n            } else {\n              pluginName = button.name;\n              module = [button.className, button.title, button.dataCommand, button.dataDisplay, button.displayOption, button.innerHTML];\n            }\n          } else {\n            module = defaultButtonList[button];\n            pluginName = button;\n          }\n\n          buttonElement = this._createButton(module[0], module[1], module[2], module[3], module[4]);\n          moduleElement.ul.appendChild(buttonElement.li);\n\n          if (plugins[pluginName]) {\n            plugins[pluginName].buttonElement = buttonElement.button;\n          }\n        }\n\n        if (vertical) tool_bar.appendChild(separator_vertical.cloneNode(false));\n        tool_bar.appendChild(moduleElement.div);\n        vertical = true;\n      }\n      /** line break  */\n      else if (/^\\/$/.test(buttonGroup)) {\n          const enterDiv = doc.createElement('DIV');\n          enterDiv.className = 'tool_module_enter';\n          tool_bar.appendChild(enterDiv);\n          vertical = false;\n        }\n    }\n\n    const tool_cover = doc.createElement('DIV');\n    tool_cover.className = 'sun-editor-id-toolbar-cover';\n    tool_bar.appendChild(tool_cover);\n    return {\n      'element': tool_bar,\n      'plugins': plugins\n    };\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (_Constructor);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/constructor.js\n");

/***/ }),

/***/ "./src/lib/context.js":
/*!****************************!*\
  !*** ./src/lib/context.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n\n/**\r\n * @description Elements and variables you should have\r\n * @param {HTMLElement} element - textarea element\r\n * @param {object} cons - Toolbar element you created\r\n * @param {json} options - Inserted options\r\n * @returns Elements, variables of the editor\r\n * @private\r\n */\n\nconst _Context = function (element, cons, options) {\n  return {\n    element: {\n      originElement: element,\n      topArea: cons._top,\n      relative: cons._relative,\n      toolbar: cons._toolBar,\n      resizingBar: cons._resizingBar,\n      navigation: cons._navigation,\n      editorArea: cons._editorArea,\n      wysiwyg: cons._wysiwygArea,\n      code: cons._codeArea,\n      loading: cons._loading,\n      resizeBackground: cons._resizeBack,\n      _stickyDummy: cons._stickyDummy,\n      _arrow: cons._arrow\n    },\n    tool: {\n      cover: cons._toolBar.getElementsByClassName('sun-editor-id-toolbar-cover')[0],\n      bold: cons._toolBar.getElementsByClassName('sun-editor-id-bold')[0],\n      underline: cons._toolBar.getElementsByClassName('sun-editor-id-underline')[0],\n      italic: cons._toolBar.getElementsByClassName('sun-editor-id-italic')[0],\n      strike: cons._toolBar.getElementsByClassName('sun-editor-id-strike')[0],\n      subscript: cons._toolBar.getElementsByClassName('sun-editor-id-subscript')[0],\n      superscript: cons._toolBar.getElementsByClassName('sun-editor-id-superscript')[0],\n      font: cons._toolBar.getElementsByClassName('sun-editor-font-family')[0],\n      format: cons._toolBar.getElementsByClassName('sun-editor-font-format')[0],\n      fontSize: cons._toolBar.getElementsByClassName('sun-editor-font-size')[0]\n    },\n    option: {\n      mode: options.mode,\n      toolbarWidth: options.toolbarWidth,\n      stickyToolbar: options.stickyToolbar,\n      resizingBar: options.resizingBar,\n      showPathLabel: options.showPathLabel,\n      popupDisplay: options.popupDisplay,\n      display: options.display,\n      height: options.height,\n      minHeight: options.minHeight,\n      maxHeight: options.maxHeight,\n      font: options.font,\n      fontSize: options.fontSize,\n      colorList: options.colorList,\n      imageResizing: options.imageResizing,\n      imageWidth: options.imageWidth,\n      imageFileInput: options.imageFileInput,\n      imageUrlInput: options.imageUrlInput,\n      imageUploadUrl: options.imageUploadUrl,\n      videoResizing: options.videoResizing,\n      videoWidth: options.videoWidth,\n      videoHeight: options.videoHeight,\n      callBackSave: options.callBackSave\n    }\n  };\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (_Context);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvbGliL2NvbnRleHQuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9zcmMvbGliL2NvbnRleHQuanM/ZDgzOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiB3eXNpd3lnIHdlYiBlZGl0b3JcclxuICpcclxuICogc3VuZWRpdG9yLmpzXHJcbiAqIENvcHlyaWdodCAyMDE3IEppSG9uZyBMZWUuXHJcbiAqIE1JVCBsaWNlbnNlLlxyXG4gKi9cclxuJ3VzZSBzdHJpY3QnO1xyXG5cclxuLyoqXHJcbiAqIEBkZXNjcmlwdGlvbiBFbGVtZW50cyBhbmQgdmFyaWFibGVzIHlvdSBzaG91bGQgaGF2ZVxyXG4gKiBAcGFyYW0ge0hUTUxFbGVtZW50fSBlbGVtZW50IC0gdGV4dGFyZWEgZWxlbWVudFxyXG4gKiBAcGFyYW0ge29iamVjdH0gY29ucyAtIFRvb2xiYXIgZWxlbWVudCB5b3UgY3JlYXRlZFxyXG4gKiBAcGFyYW0ge2pzb259IG9wdGlvbnMgLSBJbnNlcnRlZCBvcHRpb25zXHJcbiAqIEByZXR1cm5zIEVsZW1lbnRzLCB2YXJpYWJsZXMgb2YgdGhlIGVkaXRvclxyXG4gKiBAcHJpdmF0ZVxyXG4gKi9cclxuY29uc3QgX0NvbnRleHQgPSBmdW5jdGlvbiAoZWxlbWVudCwgY29ucywgb3B0aW9ucykge1xyXG4gICAgcmV0dXJuIHtcclxuICAgICAgICBlbGVtZW50OiB7XHJcbiAgICAgICAgICAgIG9yaWdpbkVsZW1lbnQ6IGVsZW1lbnQsXHJcbiAgICAgICAgICAgIHRvcEFyZWE6IGNvbnMuX3RvcCxcclxuICAgICAgICAgICAgcmVsYXRpdmU6IGNvbnMuX3JlbGF0aXZlLFxyXG4gICAgICAgICAgICB0b29sYmFyOiBjb25zLl90b29sQmFyLFxyXG4gICAgICAgICAgICByZXNpemluZ0JhcjogY29ucy5fcmVzaXppbmdCYXIsXHJcbiAgICAgICAgICAgIG5hdmlnYXRpb246IGNvbnMuX25hdmlnYXRpb24sXHJcbiAgICAgICAgICAgIGVkaXRvckFyZWE6IGNvbnMuX2VkaXRvckFyZWEsXHJcbiAgICAgICAgICAgIHd5c2l3eWc6IGNvbnMuX3d5c2l3eWdBcmVhLFxyXG4gICAgICAgICAgICBjb2RlOiBjb25zLl9jb2RlQXJlYSxcclxuICAgICAgICAgICAgbG9hZGluZzogY29ucy5fbG9hZGluZyxcclxuICAgICAgICAgICAgcmVzaXplQmFja2dyb3VuZDogY29ucy5fcmVzaXplQmFjayxcclxuICAgICAgICAgICAgX3N0aWNreUR1bW15OiBjb25zLl9zdGlja3lEdW1teSxcclxuICAgICAgICAgICAgX2Fycm93OiBjb25zLl9hcnJvd1xyXG4gICAgICAgIH0sXHJcbiAgICAgICAgdG9vbDoge1xyXG4gICAgICAgICAgICBjb3ZlcjogY29ucy5fdG9vbEJhci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzdW4tZWRpdG9yLWlkLXRvb2xiYXItY292ZXInKVswXSxcclxuICAgICAgICAgICAgYm9sZDogY29ucy5fdG9vbEJhci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzdW4tZWRpdG9yLWlkLWJvbGQnKVswXSxcclxuICAgICAgICAgICAgdW5kZXJsaW5lOiBjb25zLl90b29sQmFyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3N1bi1lZGl0b3ItaWQtdW5kZXJsaW5lJylbMF0sXHJcbiAgICAgICAgICAgIGl0YWxpYzogY29ucy5fdG9vbEJhci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzdW4tZWRpdG9yLWlkLWl0YWxpYycpWzBdLFxyXG4gICAgICAgICAgICBzdHJpa2U6IGNvbnMuX3Rvb2xCYXIuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnc3VuLWVkaXRvci1pZC1zdHJpa2UnKVswXSxcclxuICAgICAgICAgICAgc3Vic2NyaXB0OiBjb25zLl90b29sQmFyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3N1bi1lZGl0b3ItaWQtc3Vic2NyaXB0JylbMF0sXHJcbiAgICAgICAgICAgIHN1cGVyc2NyaXB0OiBjb25zLl90b29sQmFyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3N1bi1lZGl0b3ItaWQtc3VwZXJzY3JpcHQnKVswXSxcclxuICAgICAgICAgICAgZm9udDogY29ucy5fdG9vbEJhci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzdW4tZWRpdG9yLWZvbnQtZmFtaWx5JylbMF0sXHJcbiAgICAgICAgICAgIGZvcm1hdDogY29ucy5fdG9vbEJhci5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdzdW4tZWRpdG9yLWZvbnQtZm9ybWF0JylbMF0sXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiBjb25zLl90b29sQmFyLmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ3N1bi1lZGl0b3ItZm9udC1zaXplJylbMF1cclxuICAgICAgICB9LFxyXG4gICAgICAgIG9wdGlvbjoge1xyXG4gICAgICAgICAgICBtb2RlOiBvcHRpb25zLm1vZGUsXHJcbiAgICAgICAgICAgIHRvb2xiYXJXaWR0aDogb3B0aW9ucy50b29sYmFyV2lkdGgsXHJcbiAgICAgICAgICAgIHN0aWNreVRvb2xiYXI6IG9wdGlvbnMuc3RpY2t5VG9vbGJhcixcclxuICAgICAgICAgICAgcmVzaXppbmdCYXI6IG9wdGlvbnMucmVzaXppbmdCYXIsXHJcbiAgICAgICAgICAgIHNob3dQYXRoTGFiZWw6IG9wdGlvbnMuc2hvd1BhdGhMYWJlbCxcclxuICAgICAgICAgICAgcG9wdXBEaXNwbGF5OiBvcHRpb25zLnBvcHVwRGlzcGxheSxcclxuICAgICAgICAgICAgZGlzcGxheTogb3B0aW9ucy5kaXNwbGF5LFxyXG4gICAgICAgICAgICBoZWlnaHQ6IG9wdGlvbnMuaGVpZ2h0LFxyXG4gICAgICAgICAgICBtaW5IZWlnaHQ6IG9wdGlvbnMubWluSGVpZ2h0LFxyXG4gICAgICAgICAgICBtYXhIZWlnaHQ6IG9wdGlvbnMubWF4SGVpZ2h0LFxyXG4gICAgICAgICAgICBmb250OiBvcHRpb25zLmZvbnQsXHJcbiAgICAgICAgICAgIGZvbnRTaXplOiBvcHRpb25zLmZvbnRTaXplLFxyXG4gICAgICAgICAgICBjb2xvckxpc3Q6IG9wdGlvbnMuY29sb3JMaXN0LFxyXG4gICAgICAgICAgICBpbWFnZVJlc2l6aW5nOiBvcHRpb25zLmltYWdlUmVzaXppbmcsXHJcbiAgICAgICAgICAgIGltYWdlV2lkdGg6IG9wdGlvbnMuaW1hZ2VXaWR0aCxcclxuICAgICAgICAgICAgaW1hZ2VGaWxlSW5wdXQ6IG9wdGlvbnMuaW1hZ2VGaWxlSW5wdXQsXHJcbiAgICAgICAgICAgIGltYWdlVXJsSW5wdXQ6IG9wdGlvbnMuaW1hZ2VVcmxJbnB1dCxcclxuICAgICAgICAgICAgaW1hZ2VVcGxvYWRVcmw6IG9wdGlvbnMuaW1hZ2VVcGxvYWRVcmwsXHJcbiAgICAgICAgICAgIHZpZGVvUmVzaXppbmc6IG9wdGlvbnMudmlkZW9SZXNpemluZyxcclxuICAgICAgICAgICAgdmlkZW9XaWR0aDogb3B0aW9ucy52aWRlb1dpZHRoLFxyXG4gICAgICAgICAgICB2aWRlb0hlaWdodDogb3B0aW9ucy52aWRlb0hlaWdodCxcclxuICAgICAgICAgICAgY2FsbEJhY2tTYXZlOiBvcHRpb25zLmNhbGxCYWNrU2F2ZVxyXG4gICAgICAgIH1cclxuICAgIH07XHJcbn07XHJcblxyXG5leHBvcnQgZGVmYXVsdCBfQ29udGV4dDsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7Ozs7Ozs7QUFPQTtBQUVBOzs7Ozs7Ozs7QUFRQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQWJBO0FBZUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQVZBO0FBWUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQXRCQTtBQTVCQTtBQXFEQTtBQUNBO0FBQ0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/lib/context.js\n");

/***/ }),

/***/ "./src/lib/core.js":
/*!*************************!*\
  !*** ./src/lib/core.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./util */ \"./src/lib/util.js\");\n/* harmony import */ var _plugins_modules_notice__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../plugins/modules/notice */ \"./src/plugins/modules/notice.js\");\n/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n\n\n\n\n/**\r\n * @description SunEditor core function\r\n * @param context\r\n * @param plugins\r\n * @param lang\r\n * @returns {{save: save, getContext: getContext, getContent: getContent, setContent: setContent, appendContent: appendContent, disabled: disabled, enabled: enabled, show: show, hide: hide, destroy: destroy}}\r\n */\n\nconst core = function (context, plugins, lang) {\n  const _d = document;\n  const _w = window;\n  /**\r\n   * @description editor core object\r\n   * should always bind this object when registering an event in the plug-in.\r\n   */\n\n  const editor = {\n    /**\r\n     * @description Elements and user options parameters of the suneditor\r\n     */\n    context: context,\n\n    /**\r\n     * @description loaded plugins\r\n     */\n    plugins: {},\n\n    /**\r\n     * @description Whether the plugin is initialized\r\n     */\n    initPlugins: {},\n\n    /**\r\n     * @description loaded language\r\n     */\n    lang: lang,\n\n    /**\r\n     * @description dialog element\r\n     */\n    dialogForm: null,\n\n    /**\r\n     * @description current subment name\r\n     * @private\r\n     */\n    _submenuName: '',\n\n    /**\r\n     * @description submenu element\r\n     */\n    submenu: null,\n\n    /**\r\n     * @description binded submenuOff method\r\n     * @private\r\n     */\n    _bindedSubmenuOff: null,\n\n    /**\r\n     * @description active button element in submenu\r\n     */\n    submenuActiveButton: null,\n\n    /**\r\n     * @description The elements array to be processed unvisible when the controllersOff function is executed (resizing, link modified button, table controller)\r\n     */\n    controllerArray: [],\n\n    /**\r\n     * @description binded controllersOff method\r\n     * @private\r\n     */\n    _bindControllersOff: null,\n\n    /**\r\n     * @description An array of buttons whose class name is not \"code-view-enabled\"\r\n     */\n    codeViewDisabledButtons: context.element.toolbar.querySelectorAll('.sun-editor-id-toolbar button:not([class~=\"code-view-enabled\"])'),\n\n    /**\r\n     * @description Is inline mode?\r\n     * @private\r\n     */\n    _isInline: /inline/i.test(context.option.mode),\n\n    /**\r\n     * @description Is balloon mode?\r\n     * @private\r\n     */\n    _isBalloon: /balloon/i.test(context.option.mode),\n\n    /**\r\n     * @description Required value when using inline mode to sticky toolbar\r\n     * @private\r\n     */\n    _inlineToolbarAttr: {\n      width: 0,\n      height: 0,\n      isShow: false\n    },\n\n    /**\r\n     * @description An user event function when image uploaded success or remove image\r\n     * @private\r\n     */\n    _imageUpload: function (targetImgElement, index, isDelete) {\n      if (userFunction.onImageUpload) userFunction.onImageUpload(targetImgElement, index * 1, isDelete);\n    },\n\n    /**\r\n     * @description Elements that need to change text or className for each selection change\r\n     * @property {Element} FORMAT - format button\r\n     * @property {Element} FONT - font family button\r\n     * @property {Element} SIZE - font size button\r\n     * @property {Element} B - bold button\r\n     * @property {Element} U - underline button\r\n     * @property {Element} I - italic button\r\n     * @property {Element} STRIKE - strike button\r\n     * @property {Element} SUB - subscript button\r\n     * @property {Element} SUP - superscript button\r\n     */\n    commandMap: {\n      FORMAT: context.tool.format,\n      FONT: context.tool.font,\n      SIZE: context.tool.fontSize,\n      B: context.tool.bold,\n      U: context.tool.underline,\n      I: context.tool.italic,\n      STRIKE: context.tool.strike,\n      SUB: context.tool.subscript,\n      SUP: context.tool.superscript\n    },\n\n    /**\r\n     * @description Variables used internally in editor operation\r\n     * @property {Boolean} wysiwygActive - The wysiwyg frame or code view state\r\n     * @property {Boolean} isFullScreen - State of full screen\r\n     * @property {Number} innerHeight_fullScreen - InnerHeight in editor when in full screen\r\n     * @property {Number} resizeClientY - Remember the vertical size of the editor before resizing the editor (Used when calculating during resize operation)\r\n     * @property {Number} tabSize - Indented size when tab button clicked (4)\r\n     * @property {Number} minResizingSize - Minimum size of editing area when resized (65)\r\n     * @property {Array} currentNodes -  An array of the current cursor's node structure\r\n     * @private\r\n     */\n    _variable: {\n      wysiwygActive: true,\n      isFullScreen: false,\n      innerHeight_fullScreen: 0,\n      resizeClientY: 0,\n      tabSize: 4,\n      minResizingSize: 65,\n      currentNodes: [],\n      _range: null,\n      _selectionNode: null,\n      _originCssText: context.element.topArea.style.cssText,\n      _bodyOverflow: '',\n      _editorAreaOriginCssText: '',\n      _wysiwygOriginCssText: '',\n      _codeOriginCssText: '',\n      _sticky: false,\n      _imagesInfo: [],\n      _imageIndex: 0\n    },\n\n    /**\r\n     * @description If the plugin is not added, add the plugin and call the 'add' function.\r\n     * If the plugin is added call callBack function.\r\n     * @param {String} pluginName - The name of the plugin to call\r\n     * @param {function} callBackFunction - Function to be executed immediately after module call\r\n     */\n    callPlugin: function (pluginName, callBackFunction) {\n      if (!this.plugins[pluginName]) {\n        throw Error('[SUNEDITOR.core.callPlugin.fail] The called plugin does not exist or is in an invalid format. (pluginName:\"' + pluginName + '\")');\n      } else if (!this.initPlugins[pluginName]) {\n        this.plugins[pluginName].add(this, this.plugins[pluginName].buttonElement);\n        this.initPlugins[pluginName] = true;\n      }\n\n      callBackFunction();\n    },\n\n    /**\r\n     * @description If the module is not added, add the module and call the 'add' function\r\n     * @param {Array} moduleArray - module object's Array [dialog, resizing]\r\n     */\n    addModule: function (moduleArray) {\n      let moduleName = '';\n\n      for (let i = 0, len = moduleArray.length; i < len; i++) {\n        moduleName = moduleArray[i].name;\n\n        if (!this.plugins[moduleName]) {\n          this.plugins[moduleName] = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].copyObj(moduleArray[i]);\n          this.plugins[moduleName].add(this);\n        }\n      }\n    },\n\n    /**\r\n     * @description Enabled submenu\r\n     * @param {Element} element - Submenu element to call\r\n     */\n    submenuOn: function (element) {\n      const submenuName = this._submenuName = element.getAttribute('data-command');\n      if (this.plugins[submenuName].on) this.plugins[submenuName].on.call(this);\n      this.submenu = element.nextElementSibling;\n      this.submenu.style.display = 'block';\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(element, 'on');\n      this.submenuActiveButton = element;\n      const overLeft = this.context.element.toolbar.offsetWidth - (element.parentElement.offsetLeft + this.submenu.offsetWidth);\n      if (overLeft < 0) this.submenu.style.left = overLeft + 'px';else this.submenu.style.left = '1px';\n      this._bindedSubmenuOff = this.submenuOff.bind(this);\n\n      _d.addEventListener('mousedown', this._bindedSubmenuOff, false);\n    },\n\n    /**\r\n     * @description Disable submenu\r\n     */\n    submenuOff: function () {\n      if (this.submenu) {\n        this._submenuName = '';\n        this.submenu.style.display = 'none';\n        this.submenu = null;\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(this.submenuActiveButton, 'on');\n        this.submenuActiveButton = null;\n\n        _d.removeEventListener('mousedown', this._bindedSubmenuOff);\n      }\n\n      this.controllersOff();\n    },\n\n    /**\r\n     * @description Disable controller in editor area (link button, image resize button)\r\n     */\n    controllersOn: function () {\n      for (let i = 0; i < arguments.length; i++) {\n        arguments[i].style.display = 'block';\n        this.controllerArray[i] = arguments[i];\n      }\n\n      this._bindControllersOff = this.controllersOff.bind(this);\n\n      _d.addEventListener('mousedown', this._bindControllersOff, false);\n    },\n\n    /**\r\n     * @description Disable controller in editor area (link button, image resize button)\r\n     */\n    controllersOff: function () {\n      const len = this.controllerArray.length;\n\n      if (len > 0) {\n        for (let i = 0; i < len; i++) {\n          this.controllerArray[i].style.display = 'none';\n        }\n\n        this.controllerArray = [];\n\n        _d.removeEventListener('mousedown', this._bindControllersOff);\n      }\n    },\n\n    /**\r\n     * @description javascript execCommand\r\n     * @param {String} command - javascript execCommand function property\r\n     * @param {Boolean} showDefaultUI - javascript execCommand function property\r\n     * @param {String} value - javascript execCommand function property\r\n     */\n    execCommand: function (command, showDefaultUI, value) {\n      _d.execCommand(command, showDefaultUI, command === 'formatBlock' ? '<' + value + '>' : value);\n    },\n\n    /**\r\n     * @description Focus to wysiwyg area\r\n     */\n    focus: function () {\n      if (context.element.wysiwyg.style.display === 'none') return;\n      const caption = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getParentElement(this.getSelectionNode(), 'figcaption');\n\n      if (caption) {\n        caption.focus();\n      } else {\n        context.element.wysiwyg.focus();\n      }\n\n      event._findButtonEffectTag();\n    },\n\n    /**\r\n     * @description Set current editor's range object\r\n     * @param {Element} startCon - The startContainer property of the selection object.\r\n     * @param {Number} startOff - The startOffset property of the selection object.\r\n     * @param {Element} endCon - The endContainer property of the selection object.\r\n     * @param {Element} endOff - The endOffset property of the selection object.\r\n     */\n    setRange: function (startCon, startOff, endCon, endOff) {\n      const range = _d.createRange();\n\n      range.setStart(startCon, startOff);\n      range.setEnd(endCon, endOff);\n\n      const selection = _w.getSelection();\n\n      if (selection.removeAllRanges) {\n        selection.removeAllRanges();\n      }\n\n      selection.addRange(range);\n\n      this._editorRange();\n    },\n\n    /**\r\n     * @description Get current editor's range object\r\n     * @returns {Object}\r\n     */\n    getRange: function () {\n      return this._variable._range || this._createDefaultRange();\n    },\n\n    /**\r\n     * @description Get current select node\r\n     * @returns {Node}\r\n     */\n    getSelectionNode: function () {\n      return this._variable._selectionNode || context.element.wysiwyg.firstChild;\n    },\n\n    /**\r\n     * @description Saving the range object and the currently selected node of editor\r\n     * @private\r\n     */\n    _editorRange: function () {\n      const selection = _w.getSelection();\n\n      if (!_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getParentElement(selection.focusNode, '.sun-editor-id-wysiwyg')) return;\n      let range = null;\n      let selectionNode = null;\n\n      if (selection.rangeCount > 0) {\n        range = selection.getRangeAt(0);\n      } else {\n        range = this._createDefaultRange();\n      }\n\n      this._variable._range = range;\n\n      if (range.collapsed) {\n        selectionNode = range.commonAncestorContainer;\n      } else {\n        selectionNode = selection.extentNode || selection.anchorNode;\n      }\n\n      this._variable._selectionNode = selectionNode;\n    },\n\n    /**\r\n     * @description Return the range object of editor's first child node\r\n     * @returns {Object}\r\n     * @private\r\n     */\n    _createDefaultRange: function () {\n      const range = _d.createRange();\n\n      range.setStart(context.element.wysiwyg.firstChild, 0);\n      range.setEnd(context.element.wysiwyg.firstChild, 0);\n      return range;\n    },\n\n    /**\r\n     * @description Returns a \"formatElement\"(P, DIV, H[1-6], LI) array from the currently selected range.\r\n     * @returns {Array}\r\n     */\n    getSelectedFormatElements: function () {\n      let range = this.getRange();\n\n      if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(range.startContainer)) {\n        const children = context.element.wysiwyg.children;\n        this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.length);\n        range = this.getRange();\n      }\n\n      const startCon = range.startContainer;\n      const endCon = range.endContainer;\n      const commonCon = range.commonAncestorContainer;\n      const rangeFormatElements = [];\n      if (!_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(commonCon) && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(commonCon)) return [_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(commonCon)]; // get line nodes\n\n      const lineNodes = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getListChildren(commonCon, function (current) {\n        return _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormatElement(current);\n      });\n      if (startCon === endCon) return lineNodes[0];\n      let startLine = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(startCon);\n      let endLine = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(endCon);\n      let startIdx = 0;\n      let endIdx = 0;\n\n      for (let i = 0, len = lineNodes.length; i < len; i++) {\n        if (startLine === lineNodes[i]) {\n          startIdx = i;\n          continue;\n        }\n\n        if (endLine === lineNodes[i]) {\n          endIdx = i;\n          break;\n        }\n      }\n\n      for (let i = startIdx; i <= endIdx; i++) {\n        rangeFormatElements.push(lineNodes[i]);\n      }\n\n      return rangeFormatElements;\n    },\n\n    /**\r\n     * @description Returns a \"rangeFormatElement\"(blockquote, TABLE, TR, TD, OL, UL, PRE) array from the currently selected range.\r\n     * @returns {Array}\r\n     */\n    getSelectedRangeFormatElements: function () {\n      let range = this.getRange();\n\n      if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(range.startContainer)) {\n        const children = context.element.wysiwyg.children;\n        this.setRange(children[0], 0, children[children.length - 1], children[children.length - 1].textContent.length);\n        range = this.getRange();\n      }\n\n      const startCon = range.startContainer;\n      const endCon = range.endContainer;\n      const commonCon = range.commonAncestorContainer;\n      const rangeFormatElements = [];\n      if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(commonCon)) return [commonCon];\n\n      if (!_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(commonCon)) {\n        const el = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRangeFormatElement(commonCon);\n        return el ? [el] : [];\n      } // get range Elements\n\n\n      const rangeElements = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getListChildren(commonCon, function (current) {\n        return _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(current);\n      });\n      if (startCon === endCon) return rangeElements[0];\n      let startLine = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRangeFormatElement(startCon);\n      let endLine = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRangeFormatElement(endCon);\n      let startIdx = 0;\n      let endIdx = 0;\n\n      for (let i = 0, len = rangeElements.length; i < len; i++) {\n        if (startLine === rangeElements[i]) {\n          startIdx = i;\n          continue;\n        }\n\n        if (endLine === rangeElements[i]) {\n          endIdx = i;\n          break;\n        }\n      }\n\n      for (let i = startIdx; i <= endIdx; i++) {\n        if (rangeElements[i]) rangeFormatElements.push(rangeElements[i]);\n      }\n\n      return rangeFormatElements;\n    },\n\n    /**\r\n     * @description Determine if this offset is the edge offset of container\r\n     * @param {Object} container - The container property of the selection object.\r\n     * @param {Number} offset - The offset property of the selection object.\r\n     * @returns {Boolean}\r\n     */\n    isEdgePoint: function (container, offset) {\n      return offset === 0 || offset === container.nodeValue.length;\n    },\n\n    /**\r\n     * @description Show loading box\r\n     */\n    showLoading: function () {\n      context.element.loading.style.display = 'block';\n    },\n\n    /**\r\n     * @description Close loading box\r\n     */\n    closeLoading: function () {\n      context.element.loading.style.display = 'none';\n    },\n\n    /**\r\n     * @description Append format element to sibling node of argument element.\r\n     * If the \"formatNodeName\" argument value is present, the tag of that argument value is inserted,\r\n     * If not, the currently selected format tag is inserted.\r\n     * @param {Element} element - Insert as siblings of that element\r\n     * @param {String|null} formatNodeName - Node name to be inserted\r\n     * @returns {Element}\r\n     */\n    appendFormatTag: function (element, formatNodeName) {\n      const formatEl = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRangeFormatElement(element) || _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(element);\n      const currentFormatEl = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(this.getSelectionNode());\n      const oFormatName = formatNodeName ? formatNodeName : _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormatElement(currentFormatEl) ? currentFormatEl.nodeName : 'P';\n      const oFormat = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement(oFormatName);\n      oFormat.innerHTML = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace;\n      if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCell(formatEl)) formatEl.insertBefore(oFormat, element.nextElementSibling);else formatEl.parentNode.insertBefore(oFormat, formatEl.nextElementSibling);\n      return oFormat;\n    },\n\n    /**\r\n     * @description Delete selected node and insert argument value node\r\n     * @param {Element} oNode - Node to be inserted\r\n     * @param {(Element|null)} rightNode - If the node exists, it is inserted after the node\r\n     */\n    insertNode: function (oNode, rightNode) {\n      const range = this.getRange();\n      let parentNode = null;\n\n      if (!rightNode) {\n        const startCon = range.startContainer;\n        const startOff = range.startOffset;\n        const endCon = range.endContainer;\n        const endOff = range.endOffset;\n        const commonCon = range.commonAncestorContainer;\n        parentNode = startCon;\n\n        if (startCon.nodeType === 3) {\n          parentNode = startCon.parentNode;\n        }\n        /** No Select range node */\n\n\n        if (range.collapsed) {\n          if (commonCon.nodeType === 3) {\n            rightNode = commonCon.splitText(endOff);\n          } else {\n            if (parentNode.lastChild !== null && _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(parentNode.lastChild)) {\n              parentNode.removeChild(parentNode.lastChild);\n            }\n\n            rightNode = null;\n          }\n        }\n        /** Select range nodes */\n        else {\n            const isSameContainer = startCon === endCon;\n\n            if (isSameContainer) {\n              if (this.isEdgePoint(endCon, endOff)) rightNode = endCon.nextSibling;else rightNode = endCon.splitText(endOff);\n              let removeNode = startCon;\n              if (!this.isEdgePoint(startCon, startOff)) removeNode = startCon.splitText(startOff);\n              parentNode.removeChild(removeNode);\n            } else {\n              this.removeNode();\n              parentNode = commonCon;\n              rightNode = endCon;\n\n              while (rightNode.parentNode !== commonCon) {\n                rightNode = rightNode.parentNode;\n              }\n            }\n          }\n      } else {\n        parentNode = rightNode.parentNode;\n        rightNode = rightNode.nextSibling;\n      }\n\n      try {\n        parentNode.insertBefore(oNode, rightNode);\n      } catch (e) {\n        parentNode.appendChild(oNode);\n      }\n    },\n\n    /**\r\n     * @description Delete the currently selected node\r\n     */\n    removeNode: function () {\n      const range = this.getRange();\n\n      if (range.deleteContents) {\n        range.deleteContents();\n        return;\n      }\n\n      const startCon = range.startContainer;\n      const startOff = range.startOffset;\n      const endCon = range.endContainer;\n      const endOff = range.endOffset;\n      const commonCon = range.commonAncestorContainer;\n      let beforeNode = null;\n      let afterNode = null;\n      const childNodes = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getListChildNodes(commonCon);\n      let startIndex = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getArrayIndex(childNodes, startCon);\n      let endIndex = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getArrayIndex(childNodes, endCon);\n\n      for (let i = startIndex + 1, startNode = startCon; i >= 0; i--) {\n        if (childNodes[i] === startNode.parentNode && childNodes[i].firstChild === startNode && startOff === 0) {\n          startIndex = i;\n          startNode = startNode.parentNode;\n        }\n      }\n\n      for (let i = endIndex - 1, endNode = endCon; i > startIndex; i--) {\n        if (childNodes[i] === endNode.parentNode && childNodes[i].nodeType === 1) {\n          childNodes.splice(i, 1);\n          endNode = endNode.parentNode;\n          --endIndex;\n        }\n      }\n\n      for (let i = startIndex; i <= endIndex; i++) {\n        const item = childNodes[i];\n\n        if (item.length === 0 || item.nodeType === 3 && item.data === undefined) {\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(item);\n          continue;\n        }\n\n        if (item === startCon) {\n          if (startCon.nodeType === 1) {\n            beforeNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(startCon.textContent);\n          } else {\n            beforeNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(startCon.substringData(0, startOff));\n          }\n\n          if (beforeNode.length > 0) {\n            startCon.data = beforeNode.data;\n          } else {\n            _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(startCon);\n          }\n\n          continue;\n        }\n\n        if (item === endCon) {\n          if (endCon.nodeType === 1) {\n            afterNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(endCon.textContent);\n          } else {\n            afterNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(endCon.substringData(endOff, endCon.length - endOff));\n          }\n\n          if (afterNode.length > 0) {\n            endCon.data = afterNode.data;\n          } else {\n            _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(endCon);\n          }\n\n          continue;\n        }\n\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(item);\n      }\n    },\n\n    /**\r\n     * @description appended all selected format Element to the argument element and insert\r\n     * @param {Element} wrapTag - Element of wrap the arguments\r\n     */\n    wrapToTags: function (wrapTag) {\n      const range = this.getRange();\n      const rangeLines = this.getSelectedFormatElements();\n\n      if (!rangeLines) {\n        const inner = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCell(this.getSelectionNode()) ? 'DIV' : 'P');\n        inner.innerHTML = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace;\n        wrapTag.appendChild(inner);\n        this.getSelectionNode().appendChild(wrapTag);\n        return;\n      }\n\n      let last = rangeLines[rangeLines.length - 1];\n      let standTag, beforeTag, pElement;\n\n      if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(last) || _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormatElement(last)) {\n        standTag = last;\n      } else {\n        standTag = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getRangeFormatElement(last) || _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(last);\n      }\n\n      if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCell(standTag)) {\n        beforeTag = null;\n        pElement = standTag;\n      } else {\n        beforeTag = standTag.nextSibling;\n        pElement = standTag.parentNode;\n      }\n\n      let listParent = null;\n      let line = null;\n      let prevNodeName = '';\n\n      for (let i = 0, len = rangeLines.length; i < len; i++) {\n        line = rangeLines[i];\n\n        if (/^LI$/i.test(line.nodeName)) {\n          if (listParent === null || !/^LI$/i.test(prevNodeName)) {\n            listParent = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement(line.parentNode.nodeName);\n          }\n\n          listParent.appendChild(line);\n          if (i === len - 1 || !/^LI$/i.test(rangeLines[i + 1].nodeName)) wrapTag.appendChild(listParent);\n        } else {\n          wrapTag.appendChild(line);\n        }\n\n        prevNodeName = line.nodeName;\n      }\n\n      pElement.insertBefore(wrapTag, beforeTag);\n      if (!range.collapsed && (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(range.startContainer) || _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(range.endContainer))) _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeEmptyNode(pElement);\n    },\n\n    /**\r\n     * @description Add the node received as an argument value to the selected area.\r\n     * 1. When there is the same css value node in the selection area, the tag is stripped.\r\n     * 2. If there is another css value other thanCss attribute values received as arguments on the node, removed only Css attribute values received as arguments\r\n     * 3. If you pass an element whose node name is \"removenode\" as an argument value, it performs a type removal operation. ex) nodeChange(document.createElement('removenode'))\r\n     * @param {Element} appendNode - The dom that will wrap the selected text area\r\n     * @param {Array} checkCSSPropertyArray - The css attribute name Array to check (['font-size'], ['font-family', 'background-color', 'border']...])\r\n     */\n    nodeChange: function (appendNode, checkCSSPropertyArray) {\n      const range = this.getRange();\n      const isRemoveFormat = /removenode/i.test(appendNode.nodeName);\n      let tempCon, tempOffset, tempChild, tempArray;\n      /* checked same style property */\n\n      if (range.startContainer === range.endContainer) {\n        let sNode = range.startContainer;\n\n        if (isRemoveFormat) {\n          if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(sNode) === sNode.parentNode) return;\n        } else {\n          let checkCnt = 0;\n\n          for (let i = 0; i < checkCSSPropertyArray.length; i++) {\n            while (!_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormatElement(sNode) && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(sNode)) {\n              if (sNode.nodeType === 1 && sNode.style[checkCSSPropertyArray[i]] === appendNode.style[checkCSSPropertyArray[i]]) {\n                checkCnt++;\n              }\n\n              sNode = sNode.parentNode;\n            }\n          }\n\n          if (checkCnt >= checkCSSPropertyArray.length) return;\n        }\n      }\n      /* find text node */\n      // startContainer\n\n\n      tempCon = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(range.startContainer) ? context.element.wysiwyg.firstChild : range.startContainer;\n      tempOffset = range.startOffset;\n\n      if (tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\n        while (tempCon && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(tempCon) && tempCon.nodeType === 1) {\n          tempArray = [];\n          tempChild = tempCon.childNodes;\n\n          for (let i = 0, len = tempChild.length; i < len; i++) {\n            tempArray.push(tempChild[i]);\n          }\n\n          tempCon = tempArray[tempOffset] || tempCon.nextElementSibling || tempCon.nextSibling;\n          tempOffset = 0;\n        }\n\n        if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(tempCon)) {\n          const emptyText = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace);\n          tempCon.parentNode.insertBefore(emptyText, tempCon);\n          tempCon = emptyText;\n        }\n      }\n\n      const startCon = tempCon;\n      const startOff = tempOffset; // endContainer\n\n      tempCon = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(range.endContainer) ? context.element.wysiwyg.lastChild : range.endContainer;\n      tempOffset = range.endOffset;\n\n      if (tempCon.nodeType === 1 && tempCon.childNodes.length > 0) {\n        while (tempCon && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(tempCon) && tempCon.nodeType === 1) {\n          tempArray = [];\n          tempChild = tempCon.childNodes;\n\n          for (let i = 0, len = tempChild.length; i < len; i++) {\n            tempArray.push(tempChild[i]);\n          }\n\n          tempCon = tempArray[tempOffset - 1] || !/FIGURE/i.test(tempArray[0].nodeName) ? tempArray[0] : tempCon.previousElementSibling || tempCon.previousSibling || startCon;\n        }\n\n        tempOffset = tempCon.textContent.length;\n\n        if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(tempCon)) {\n          const emptyText = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace);\n          tempCon.parentNode.insertBefore(emptyText, tempCon);\n          tempCon = emptyText;\n          tempOffset = 0;\n        }\n      }\n\n      const endCon = tempCon;\n      const endOff = tempOffset;\n      const commonCon = range.commonAncestorContainer;\n      const newNodeName = appendNode.nodeName;\n      this.setRange(startCon, startOff, endCon, endOff);\n      let start = {},\n          end = {};\n      let newNode, regExp;\n\n      if (checkCSSPropertyArray) {\n        regExp = '(?:;|^|\\\\s)(?:' + checkCSSPropertyArray[0];\n\n        for (let i = 1; i < checkCSSPropertyArray.length; i++) {\n          regExp += '|' + checkCSSPropertyArray[i];\n        }\n\n        regExp += ')\\\\s*:[^;]*\\\\s*(?:;|$)';\n        regExp = new RegExp(regExp, 'ig');\n      }\n      /** tag check function*/\n\n\n      const checkCss = function (vNode) {\n        if (isRemoveFormat || vNode.nodeType === 3 || _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(vNode)) return true;\n        let style = '';\n\n        if (regExp && vNode.style.cssText.length > 0) {\n          style = vNode.style.cssText.replace(regExp, '').trim();\n        }\n\n        if (style.length > 0 || vNode.nodeName !== newNodeName) {\n          if (vNode.style.cssText.length > 0) vNode.style.cssText = style;\n          return true;\n        }\n\n        return false;\n      };\n      /** one line */\n\n\n      if (!_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(commonCon) && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(commonCon)) {\n        newNode = appendNode.cloneNode(false);\n\n        const newRange = this._nodeChange_oneLine(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(commonCon), newNode, checkCss, startCon, startOff, endCon, endOff, isRemoveFormat, range.collapsed);\n\n        start.container = newRange.startContainer;\n        start.offset = newRange.startOffset;\n        end.container = newRange.endContainer;\n        end.offset = newRange.endOffset;\n      }\n      /** multi line */\n      else {\n          // get line nodes\n          const lineNodes = this.getSelectedFormatElements();\n          const endLength = lineNodes.length - 1; // startCon\n\n          newNode = appendNode.cloneNode(false);\n          start = this._nodeChange_startLine(lineNodes[0], newNode, checkCss, startCon, startOff, isRemoveFormat); // mid\n\n          for (let i = 1; i < endLength; i++) {\n            newNode = appendNode.cloneNode(false);\n\n            this._nodeChange_middleLine(lineNodes[i], newNode, checkCss, isRemoveFormat);\n          } // endCon\n\n\n          if (endLength > 0) {\n            newNode = appendNode.cloneNode(false);\n            end = this._nodeChange_endLine(lineNodes[endLength], newNode, checkCss, endCon, endOff, isRemoveFormat);\n          } else {\n            end = start;\n          }\n        } // set range\n\n\n      this.setRange(start.container, start.offset, end.container, end.offset);\n    },\n\n    /**\r\n     * @description wraps text nodes of line selected text.\r\n     * @param {Element} element - The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n     * @param {function} validation - Check if the node should be stripped.\r\n     * @param {Element} startCon - The startContainer property of the selection object.\r\n     * @param {Number} startOff - The startOffset property of the selection object.\r\n     * @param {Element} endCon - The endContainer property of the selection object.\r\n     * @param {Number} endOff - The endOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n     * @param {Boolean} collapsed - range.collapsed\r\n     * @returns {{startContainer: *, startOffset: *, endContainer: *, endOffset: *}}\r\n     * @private\r\n     */\n    _nodeChange_oneLine: function (element, newInnerNode, validation, startCon, startOff, endCon, endOff, isRemoveFormat, collapsed) {\n      const el = element;\n      const pNode = element.cloneNode(false);\n      const isSameNode = startCon === endCon;\n      let startContainer = startCon;\n      let startOffset = startOff;\n      let endContainer = endCon;\n      let endOffset = endOff;\n      let startPass = false;\n      let endPass = false;\n      let pCurrent, newNode, appendNode, cssText;\n\n      function checkCss(vNode) {\n        const regExp = new RegExp('(?:;|^|\\\\s)(?:' + cssText + 'null)\\\\s*:[^;]*\\\\s*(?:;|$)', 'ig');\n        let style = '';\n\n        if (regExp && vNode.style.cssText.length > 0) {\n          style = regExp.test(vNode.style.cssText);\n        }\n\n        return !style;\n      }\n\n      (function recursionFunc(current, node) {\n        const childNodes = current.childNodes;\n\n        for (let i = 0, len = childNodes.length; i < len; i++) {\n          let child = childNodes[i];\n          let coverNode = node;\n          let cloneNode; // startContainer\n\n          if (!startPass && child === startContainer) {\n            const prevNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(0, startOffset));\n            console.log('start : ' + startOffset + 'end : ' + endOffset);\n            const textNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(startContainer.nodeType === 1 ? '' : startContainer.substringData(startOffset, endOffset > startOffset ? endOffset - startOffset : endOffset === startOffset ? 0 : startContainer.data.length - startOffset));\n\n            if (prevNode.data.length > 0) {\n              node.appendChild(prevNode);\n            }\n\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n\n            while (newNode !== pNode && newNode !== el && newNode !== null) {\n              if (validation(newNode) && newNode.nodeType === 1 && checkCss(newNode)) {\n                pCurrent.push(newNode.cloneNode(false));\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || textNode;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            newInnerNode.appendChild(childNode);\n            pNode.appendChild(newInnerNode);\n            startContainer = textNode;\n            startOffset = 0;\n            startPass = true;\n            if (newNode !== textNode) newNode.appendChild(startContainer);\n            if (!isSameNode) continue;\n          } // endContainer\n\n\n          if (!endPass && child === endContainer) {\n            const afterNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(endContainer.nodeType === 1 ? '' : endContainer.substringData(endOffset, endContainer.length - endOffset));\n            const textNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(isSameNode || endContainer.nodeType === 1 ? '' : endContainer.substringData(0, endOffset));\n\n            if (afterNode.data.length > 0) {\n              newNode = child;\n              cssText = '';\n              pCurrent = [];\n\n              while (newNode !== pNode && newNode !== el && newNode !== null) {\n                if (newNode.nodeType === 1 && checkCss(newNode)) {\n                  pCurrent.push(newNode.cloneNode(false));\n                  cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n                }\n\n                newNode = newNode.parentNode;\n              }\n\n              cloneNode = appendNode = newNode = pCurrent.pop() || afterNode;\n\n              while (pCurrent.length > 0) {\n                newNode = pCurrent.pop();\n                appendNode.appendChild(newNode);\n                appendNode = newNode;\n              }\n\n              pNode.appendChild(cloneNode);\n              newNode.textContent = afterNode.data;\n            }\n\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n\n            while (newNode !== pNode && newNode !== el && newNode !== null) {\n              if (validation(newNode) && newNode.nodeType === 1 && checkCss(newNode)) {\n                pCurrent.push(newNode.cloneNode(false));\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || textNode;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            newInnerNode.appendChild(childNode);\n            endContainer = textNode;\n            endOffset = textNode.data.length;\n            endPass = true;\n\n            if (!isRemoveFormat && collapsed) {\n              newInnerNode = textNode;\n              textNode.textContent = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace;\n            }\n\n            if (newNode !== textNode) newNode.appendChild(endContainer);\n            continue;\n          } // other\n\n\n          if (startPass) {\n            if (child.nodeType === 1 && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) {\n              recursionFunc(child, child);\n              continue;\n            }\n\n            newNode = child;\n            pCurrent = [];\n            cssText = '';\n\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              if (newNode.nodeType === 1 && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child) && (endPass || validation(newNode)) && checkCss(newNode)) {\n                pCurrent.push(newNode.cloneNode(false));\n                cssText += newNode.style.cssText.substr(0, newNode.style.cssText.indexOf(':')) + '|';\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || child;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (childNode === child) {\n              if (!endPass) node = newInnerNode;else node = pNode;\n            } else if (endPass) {\n              pNode.appendChild(childNode);\n              node = newNode;\n            } else {\n              newInnerNode.appendChild(childNode);\n              node = newNode;\n            }\n          }\n\n          cloneNode = child.cloneNode(false);\n          node.appendChild(cloneNode);\n          if (child.nodeType === 1 && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) coverNode = cloneNode;\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode);\n\n      if (isRemoveFormat) {\n        startContainer = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(collapsed ? _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace : newInnerNode.textContent);\n        pNode.insertBefore(startContainer, newInnerNode);\n        pNode.removeChild(newInnerNode);\n        if (collapsed) startOffset = 1;\n      } else if (collapsed) {\n        startContainer = endContainer = newInnerNode;\n        startOffset = 1;\n        endOffset = 1;\n      }\n\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeEmptyNode(pNode);\n      element.parentNode.insertBefore(pNode, element);\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(element);\n      return {\n        startContainer: startContainer,\n        startOffset: startOffset,\n        endContainer: isRemoveFormat || !endContainer.textContent ? startContainer : endContainer,\n        endOffset: isRemoveFormat || !endContainer.textContent ? startContainer.textContent.length : endOffset\n      };\n    },\n\n    /**\r\n     * @description wraps mid lines selected text.\r\n     * @param {Element} element - The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n     * @param {function} validation - Check if the node should be stripped.\r\n     * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n     * @private\r\n     */\n    _nodeChange_middleLine: function (element, newInnerNode, validation, isRemoveFormat) {\n      if (isRemoveFormat) {\n        newInnerNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(element.textContent ? element.textContent : _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace);\n      } else {\n        (function recursionFunc(current, node) {\n          const childNodes = current.childNodes;\n\n          for (let i = 0, len = childNodes.length; i < len; i++) {\n            let child = childNodes[i];\n            let coverNode = node;\n\n            if (validation(child)) {\n              let cloneNode = child.cloneNode(false);\n              node.appendChild(cloneNode);\n              if (child.nodeType === 1 && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) coverNode = cloneNode;\n            }\n\n            recursionFunc(child, coverNode);\n          }\n        })(element, newInnerNode);\n      }\n\n      element.innerHTML = '';\n      element.appendChild(newInnerNode);\n    },\n\n    /**\r\n     * @description wraps first line selected text.\r\n     * @param {Element} element - The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n     * @param {function} validation - Check if the node should be stripped.\r\n     * @param {Element} startCon - The startContainer property of the selection object.\r\n     * @param {Number} startOff - The startOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n     * @returns {{container: *, offset: *}}\r\n     * @private\r\n     */\n    _nodeChange_startLine: function (element, newInnerNode, validation, startCon, startOff, isRemoveFormat) {\n      const el = element;\n      const pNode = element.cloneNode(false);\n      let container = startCon;\n      let offset = startOff;\n      let passNode = false;\n      let pCurrent, newNode, appendNode;\n\n      (function recursionFunc(current, node) {\n        const childNodes = current.childNodes;\n\n        for (let i = 0, len = childNodes.length; i < len; i++) {\n          const child = childNodes[i];\n          let coverNode = node;\n\n          if (passNode && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) {\n            if (child.nodeType === 1) {\n              recursionFunc(child, child);\n              continue;\n            }\n\n            newNode = child;\n            pCurrent = [];\n\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              if (newNode.nodeType === 1 && validation(newNode)) {\n                pCurrent.push(newNode.cloneNode(false));\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            if (pCurrent.length > 0) {\n              const childNode = pCurrent.pop();\n              appendNode = newNode = childNode;\n\n              while (pCurrent.length > 0) {\n                newNode = pCurrent.pop();\n                appendNode.appendChild(newNode);\n                appendNode = newNode;\n              }\n\n              newInnerNode.appendChild(childNode);\n              node = newNode;\n            } else {\n              node = newInnerNode;\n            }\n          } // startContainer\n\n\n          if (!passNode && child === container) {\n            const prevNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\n            const textNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, container.length - offset));\n\n            if (prevNode.data.length > 0) {\n              node.appendChild(prevNode);\n            }\n\n            newNode = node;\n            pCurrent = [];\n\n            while (newNode !== pNode && newNode !== null) {\n              if (newNode.nodeType === 1 && validation(newNode)) {\n                pCurrent.push(newNode.cloneNode(false));\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || node;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (childNode !== node) {\n              newInnerNode.appendChild(childNode);\n              node = newNode;\n            } else {\n              node = newInnerNode;\n            }\n\n            if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\n            pNode.appendChild(newInnerNode);\n            container = textNode;\n            offset = 0;\n            passNode = true;\n            node.appendChild(container);\n            continue;\n          }\n\n          if (!passNode || validation(child)) {\n            const cloneNode = child.cloneNode(false);\n            node.appendChild(cloneNode);\n            if (child.nodeType === 1 && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) coverNode = cloneNode;\n          }\n\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode);\n\n      if (isRemoveFormat) {\n        container = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(newInnerNode.textContent);\n        pNode.insertBefore(container, newInnerNode);\n        pNode.removeChild(newInnerNode);\n      }\n\n      if (!isRemoveFormat && pNode.children.length === 0) {\n        if (element.childNodes) {\n          container = element.childNodes[0];\n        } else {\n          container = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace);\n          element.appendChild(container);\n        }\n      } else {\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeEmptyNode(pNode);\n        element.parentNode.insertBefore(pNode, element);\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(element);\n      }\n\n      return {\n        container: container,\n        offset: offset\n      };\n    },\n\n    /**\r\n     * @description wraps last line selected text.\r\n     * @param {Element} element - The node of the line that contains the selected text node.\r\n     * @param {Element} newInnerNode - The dom that will wrap the selected text area\r\n     * @param {function} validation - Check if the node should be stripped.\r\n     * @param {Element} endCon - The endContainer property of the selection object.\r\n     * @param {Number} endOff - The endOffset property of the selection object.\r\n     * @param {Boolean} isRemoveFormat - Is the remove format command ?\r\n     * @returns {{container: *, offset: *}}\r\n     * @private\r\n     */\n    _nodeChange_endLine: function (element, newInnerNode, validation, endCon, endOff, isRemoveFormat) {\n      const el = element;\n      const pNode = element.cloneNode(false);\n      let container = endCon;\n      let offset = endOff;\n      let passNode = false;\n      let pCurrent, newNode, appendNode;\n\n      (function recursionFunc(current, node) {\n        const childNodes = current.childNodes;\n\n        for (let i = childNodes.length - 1; 0 <= i; i--) {\n          const child = childNodes[i];\n          let coverNode = node;\n\n          if (passNode && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) {\n            if (child.nodeType === 1) {\n              recursionFunc(child, child);\n              continue;\n            }\n\n            newNode = child;\n            pCurrent = [];\n\n            while (newNode.parentNode !== null && newNode !== el && newNode !== newInnerNode) {\n              if (validation(newNode) && newNode.nodeType === 1) {\n                pCurrent.push(newNode.cloneNode(false));\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            if (pCurrent.length > 0) {\n              const childNode = pCurrent.pop();\n              appendNode = newNode = childNode;\n\n              while (pCurrent.length > 0) {\n                newNode = pCurrent.pop();\n                appendNode.appendChild(newNode);\n                appendNode = newNode;\n              }\n\n              newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\n              node = newNode;\n            } else {\n              node = newInnerNode;\n            }\n          } // endContainer\n\n\n          if (!passNode && child === container) {\n            const afterNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(container.nodeType === 1 ? '' : container.substringData(offset, container.length - offset));\n            const textNode = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(container.nodeType === 1 ? '' : container.substringData(0, offset));\n\n            if (afterNode.data.length > 0) {\n              node.insertBefore(afterNode, node.firstChild);\n            }\n\n            newNode = node;\n            pCurrent = [];\n\n            while (newNode !== pNode && newNode !== null) {\n              if (validation(newNode) && newNode.nodeType === 1) {\n                pCurrent.push(newNode.cloneNode(false));\n              }\n\n              newNode = newNode.parentNode;\n            }\n\n            const childNode = pCurrent.pop() || node;\n            appendNode = newNode = childNode;\n\n            while (pCurrent.length > 0) {\n              newNode = pCurrent.pop();\n              appendNode.appendChild(newNode);\n              appendNode = newNode;\n            }\n\n            if (childNode !== node) {\n              newInnerNode.insertBefore(childNode, newInnerNode.firstChild);\n              node = newNode;\n            } else {\n              node = newInnerNode;\n            }\n\n            if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) newInnerNode.appendChild(child.cloneNode(false));\n            pNode.insertBefore(newInnerNode, pNode.firstChild);\n            container = textNode;\n            offset = textNode.data.length;\n            passNode = true;\n            node.insertBefore(container, node.firstChild);\n            continue;\n          }\n\n          if (!passNode || validation(child)) {\n            const cloneNode = child.cloneNode(false);\n            node.insertBefore(cloneNode, node.firstChild);\n            if (child.nodeType === 1 && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isBreak(child)) coverNode = cloneNode;\n          }\n\n          recursionFunc(child, coverNode);\n        }\n      })(element, pNode);\n\n      if (isRemoveFormat) {\n        container = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(newInnerNode.textContent);\n        offset = container.textContent.length;\n        pNode.insertBefore(container, newInnerNode);\n        pNode.removeChild(newInnerNode);\n      }\n\n      if (!isRemoveFormat && pNode.childNodes.length === 0) {\n        if (element.childNodes) {\n          container = element.childNodes[0];\n        } else {\n          container = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace);\n          element.appendChild(container);\n        }\n      } else {\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeEmptyNode(pNode);\n        element.parentNode.insertBefore(pNode, element);\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(element);\n      }\n\n      return {\n        container: container,\n        offset: offset\n      };\n    },\n\n    /**\r\n     * @description Execute command of command button(All Buttons except submenu and dialog)\r\n     * (redo, undo, bold, underline, italic, strikethrough, subscript, superscript, removeFormat, indent, outdent, fullscreen, showBlocks, codeview, preview, print)\r\n     * @param {Element} target - The element of command button\r\n     * @param {String} command - Property of command button (data-value)\r\n     */\n    commandHandler: function (target, command) {\n      switch (command) {\n        case 'codeView':\n          this.controllersOff();\n          this.toggleCodeView();\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(target, 'on');\n          break;\n\n        case 'fullScreen':\n          this.controllersOff();\n          this.toggleFullScreen(target);\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(target, 'on');\n          break;\n\n        case 'indent':\n        case 'outdent':\n          this.indent(command);\n          break;\n\n        case 'redo':\n        case 'undo':\n          this.execCommand(command, false, null);\n          break;\n\n        case 'removeFormat':\n          this.removeFormat();\n          break;\n\n        case 'preview':\n        case 'print':\n          this.openWindowContents(command);\n          break;\n\n        case 'showBlocks':\n          this.toggleDisplayBlocks();\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(target, 'on');\n          break;\n\n        case 'subscript':\n          if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasClass(context.tool.superscript, 'on')) {\n            this.execCommand('superscript', false, null);\n            _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(context.tool.superscript, 'on');\n          }\n\n          this.execCommand(command, false, null);\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(target, 'on');\n          break;\n\n        case 'superscript':\n          if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hasClass(context.tool.subscript, 'on')) {\n            this.execCommand('subscript', false, null);\n            _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(context.tool.subscript, 'on');\n          }\n\n          this.execCommand(command, false, null);\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(target, 'on');\n          break;\n\n        case 'save':\n          if (typeof context.option.callBackSave === 'function') {\n            context.option.callBackSave(this.getContents());\n          } else {\n            throw Error('[SUNEDITOR.core.commandHandler.fail] Please register call back function in creation option. (callBackSave : Function)');\n          }\n\n          break;\n\n        default:\n          // 'bold', 'underline', 'italic', 'strike'\n          this.execCommand(command, false, target.getAttribute('data-value'));\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(target, 'on');\n      }\n\n      this.focus();\n    },\n\n    /**\r\n     * @description Remove format of the currently selected range (IE, Edge not working)\r\n     */\n    removeFormat: function () {\n      this.nodeChange(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('REMOVENODE'));\n    },\n\n    /**\r\n     * @description This method implements indentation to selected range.\r\n     * Setted \"margin-left\" to \"25px\" in the top \"P\" tag of the parameter node.\r\n     * @param command {String} - Separator (\"indent\" or \"outdent\")\r\n     */\n    indent: function (command) {\n      const rangeLines = this.getSelectedFormatElements();\n      let p, margin;\n\n      for (let i = 0, len = rangeLines.length; i < len; i++) {\n        p = rangeLines[i];\n        margin = /\\d+/.test(p.style.marginLeft) ? p.style.marginLeft.match(/\\d+/)[0] * 1 : 0;\n\n        if ('indent' === command) {\n          margin += 25;\n        } else {\n          margin -= 25;\n        }\n\n        p.style.marginLeft = (margin < 0 ? 0 : margin) + 'px';\n      }\n    },\n\n    /**\r\n     * @description Add or remove the class name of \"body\" so that the code block is visible\r\n     */\n    toggleDisplayBlocks: function () {\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(context.element.wysiwyg, 'sun-editor-show-block');\n    },\n\n    /**\r\n     * @description Changes to code view or wysiwyg view\r\n     */\n    toggleCodeView: function () {\n      const wysiwygActive = this._variable.wysiwygActive;\n      const disButtons = this.codeViewDisabledButtons;\n\n      for (let i = 0, len = disButtons.length; i < len; i++) {\n        disButtons[i].disabled = wysiwygActive;\n      }\n\n      if (!wysiwygActive) {\n        const code_html = context.element.code.value.trim();\n        context.element.wysiwyg.innerHTML = code_html.length > 0 ? _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertContentsForEditor(code_html) : '<p>' + _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace + '</p>';\n        context.element.wysiwyg.scrollTop = 0;\n        context.element.code.style.display = 'none';\n        context.element.wysiwyg.style.display = 'block';\n        if (context.option.height === 'auto') context.element.code.style.height = '0px';\n        this._variable.wysiwygActive = true;\n        this.focus();\n      } else {\n        context.element.code.value = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertHTMLForCodeView(context.element.wysiwyg.innerHTML.trim());\n        context.element.wysiwyg.style.display = 'none';\n        context.element.code.style.display = 'block';\n        if (context.option.height === 'auto') context.element.code.style.height = context.element.code.scrollHeight > 0 ? context.element.code.scrollHeight + 'px' : 'auto';\n        this._variable.wysiwygActive = false;\n        context.element.code.focus();\n      }\n    },\n\n    /**\r\n     * @description Changes to full screen or default screen\r\n     * @param {Element} element - full screen button\r\n     */\n    toggleFullScreen: function (element) {\n      if (!this._variable.isFullScreen) {\n        this._variable.isFullScreen = true;\n        context.element.topArea.style.position = 'fixed';\n        context.element.topArea.style.top = '0';\n        context.element.topArea.style.left = '0';\n        context.element.topArea.style.width = '100%';\n        context.element.topArea.style.height = '100%';\n        context.element.topArea.style.zIndex = '2147483647';\n        this._variable._bodyOverflow = _d.body.style.overflow;\n        _d.body.style.overflow = 'hidden';\n        this._variable._editorAreaOriginCssText = context.element.editorArea.style.cssText;\n        this._variable._wysiwygOriginCssText = context.element.wysiwyg.style.cssText;\n        this._variable._codeOriginCssText = context.element.code.style.cssText;\n        context.element.editorArea.style.cssText = context.element.toolbar.style.cssText = context.element.wysiwyg.style.cssText = context.element.code.style.cssText = '';\n        context.element.toolbar.style.width = context.element.wysiwyg.style.height = context.element.code.style.height = '100%';\n        context.element.toolbar.style.position = 'relative';\n        this._variable.innerHeight_fullScreen = _w.innerHeight - context.element.toolbar.offsetHeight;\n        context.element.editorArea.style.height = this._variable.innerHeight_fullScreen + 'px';\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(element.firstElementChild, 'icon-expansion');\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(element.firstElementChild, 'icon-reduction');\n      } else {\n        this._variable.isFullScreen = false;\n        context.element.code.style.cssText = this._variable._codeOriginCssText;\n        context.element.wysiwyg.style.cssText = this._variable._wysiwygOriginCssText;\n        context.element.toolbar.style.cssText = '';\n        context.element.editorArea.style.cssText = this._variable._editorAreaOriginCssText;\n        context.element.topArea.style.cssText = this._variable._originCssText;\n        _d.body.style.overflow = this._variable._bodyOverflow;\n\n        if (context.option.stickyToolbar > -1) {\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(context.element.toolbar, 'sun-editor-sticky');\n          event.onScroll_window();\n        }\n\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(element.firstElementChild, 'icon-reduction');\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(element.firstElementChild, 'icon-expansion');\n      }\n    },\n\n    /**\r\n     * @description Open the preview window or open the print window\r\n     * @param {String} mode - 'preview' or 'print'\r\n     */\n    openWindowContents: function (mode) {\n      const isPrint = mode === 'print';\n\n      const windowObject = _w.open('', '_blank');\n\n      windowObject.mimeType = 'text/html';\n      windowObject.document.write('' + '<!doctype html><html>' + '<head>' + '<meta charset=\"utf-8\" />' + '<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">' + '<title>' + (isPrint ? lang.toolbar.print : lang.toolbar.preview) + '</title>' + '<link rel=\"stylesheet\" type=\"text/css\" href=\"' + _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getIncludePath(['suneditor-contents', 'suneditor'], 'css') + '\">' + '</head>' + '<body>' + '<div class=\"sun-editor-editable\" style=\"width:' + context.element.wysiwyg.offsetWidth + 'px; margin:auto;\">' + this.getContents() + '</div>' + (isPrint ? '<script>_w.print();</script>' : '') + '</body>' + '</html>');\n    },\n\n    /**\r\n     * @description Gets the current contents\r\n     * @returns {Object}\r\n     */\n    getContents: function () {\n      let contents = '';\n      if (context.element.wysiwyg.innerText.trim().length === 0) return contents;\n\n      if (editor._variable.wysiwygActive) {\n        contents = context.element.wysiwyg.innerHTML;\n      } else {\n        contents = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertContentsForEditor(context.element.code.value);\n      }\n\n      const renderHTML = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('DIV');\n      renderHTML.innerHTML = contents;\n      const figcaptions = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getListChildren(renderHTML, function (current) {\n        return /FIGCAPTION/i.test(current.nodeName);\n      });\n\n      for (let i = 0, len = figcaptions.length; i < len; i++) {\n        figcaptions[i].outerHTML = figcaptions[i].outerHTML.replace(/(?!^<figcaption\\s+)(contenteditable=\"([a-z]+|\\s*)\")\\s*(?=[^>]*>)/i, '');\n      }\n\n      return renderHTML.innerHTML;\n    }\n  };\n  /**\r\n   * @description event function\r\n   */\n\n  const event = {\n    _shortcutKeyCode: {\n      66: ['bold', 'B'],\n      83: ['strikethrough', 'STRIKE'],\n      85: ['underline', 'U'],\n      73: ['italic', 'I'],\n      89: ['redo'],\n      90: ['undo'],\n      219: ['outdent'],\n      221: ['indent']\n    },\n    _directionKeyKeyCode: new RegExp('^(?:8|13|32|46|33|34|35|36|37|38|39|40|98|100|102|104)$'),\n    _changeButtonClassTagCheck: new RegExp('^(?:B|U|I|STRIKE|SUB|SUP)$'),\n    _findButtonEffectTag: function () {\n      const commandMap = editor.commandMap;\n      const classOnCheck = this._changeButtonClassTagCheck;\n      const commandMapNodes = [];\n      const currentNodes = [];\n      let findFormat = true,\n          findFont = true,\n          findSize = true,\n          findA = true;\n      let findB = true,\n          findI = true,\n          findU = true,\n          findS = true;\n      let cssText = '',\n          nodeName = '';\n\n      for (let selectionParent = editor.getSelectionNode(); !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(selectionParent); selectionParent = selectionParent.parentNode) {\n        if (!selectionParent) break;\n        if (selectionParent.nodeType !== 1) continue;\n        nodeName = selectionParent.nodeName.toUpperCase();\n        currentNodes.push(nodeName);\n        /** Format */\n\n        if (findFormat && _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormatElement(selectionParent)) {\n          commandMapNodes.push('FORMAT');\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].changeTxt(commandMap.FORMAT, nodeName);\n          findFormat = false;\n          continue;\n        }\n        /** Font */\n\n\n        if (findFont && (selectionParent.style.fontFamily.length > 0 || selectionParent.face && selectionParent.face.length > 0)) {\n          commandMapNodes.push('FONT');\n          const selectFont = (selectionParent.style.fontFamily || selectionParent.face || lang.toolbar.font).replace(/[\"']/g, '');\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].changeTxt(commandMap.FONT, selectFont);\n          findFont = false;\n        }\n        /** A */\n\n\n        if (findA && /^A$/.test(nodeName) && selectionParent.getAttribute('data-image-link') === null) {\n          if (!context.link || editor.controllerArray[0] !== context.link.linkBtn) {\n            editor.callPlugin('link', function () {\n              editor.plugins.link.call_controller_linkButton.call(editor, selectionParent);\n            });\n          }\n\n          findA = false;\n        } else if (findA && context.link && editor.controllerArray[0] === context.link.linkBtn) {\n          editor.controllersOff();\n        }\n        /** SPAN */\n\n\n        if (findSize && /^SPAN$/.test(nodeName)) {\n          /** font size */\n          if (selectionParent.style.fontSize.length > 0) {\n            commandMapNodes.push('SIZE');\n            _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].changeTxt(commandMap.SIZE, selectionParent.style.fontSize);\n            findSize = false;\n          }\n        }\n        /** command map */\n\n\n        cssText = selectionParent.style.cssText;\n\n        if (findB && /font\\-weight\\s*:\\s*(?:\\d+|bold|bolder)(?:;|\\s|)/.test(cssText)) {\n          commandMapNodes.push('B');\n          findB = false;\n        }\n\n        if (findI && /font\\-style\\s*:\\s*(?:italic|oblique)(?:;|\\s)/.test(cssText)) {\n          commandMapNodes.push('I');\n          findI = false;\n        }\n\n        if (findU && /text\\-decoration(?:\\-line)?\\s*:\\s*underline(?:;|\\s|)/.test(cssText)) {\n          commandMapNodes.push('U');\n          findU = false;\n        }\n\n        if (findS && /text\\-decoration(?:\\-line)?\\s*:\\s*line-through(?:;|\\s|)/.test(cssText)) {\n          commandMapNodes.push('STRIKE');\n          findS = false;\n        }\n\n        commandMapNodes.push(/^STRONG$/.test(nodeName) ? 'B' : /^EM$/.test(nodeName) ? 'I' : nodeName);\n      }\n      /** A Tag edit controller off */\n\n\n      if (findA) editor.controllersOff();\n      /** toggle class on */\n\n      for (let i = 0; i < commandMapNodes.length; i++) {\n        nodeName = commandMapNodes[i];\n\n        if (classOnCheck.test(nodeName)) {\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(commandMap[nodeName], 'on');\n        }\n      }\n      /** remove class, display text */\n\n\n      for (let key in commandMap) {\n        if (commandMapNodes.indexOf(key) > -1) continue;\n\n        if (/^FONT/i.test(key)) {\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].changeTxt(commandMap[key], lang.toolbar.font);\n        } else if (/^SIZE$/i.test(key)) {\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].changeTxt(commandMap[key], lang.toolbar.fontSize);\n        } else {\n          _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(commandMap[key], 'on');\n        }\n      }\n      /** save current nodes */\n\n\n      editor._variable.currentNodes = currentNodes.reverse();\n      /**  Displays the current node structure to resizingBar */\n\n      if (context.option.showPathLabel) context.element.navigation.textContent = editor._variable.currentNodes.join(' > ');\n    },\n    _cancelCaptionEdit: function () {\n      this.setAttribute('contenteditable', false);\n      this.removeEventListener('blur', event._cancelCaptionEdit);\n    },\n    onMouseDown_toolbar: function (e) {\n      editor._editorRange();\n\n      e.preventDefault();\n      let target = e.target;\n\n      if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getParentElement(target, '.sun-editor-submenu')) {\n        e.stopPropagation();\n      } else {\n        let command = target.getAttribute('data-command');\n        let className = target.className;\n\n        while (!command && !/editor_tool/.test(className) && !/sun-editor-id-toolbar/.test(className)) {\n          target = target.parentNode;\n          command = target.getAttribute('data-command');\n          className = target.className;\n        }\n\n        if (command === editor._submenuName) {\n          e.stopPropagation();\n        }\n      }\n    },\n    onClick_toolbar: function (e) {\n      e.preventDefault();\n      e.stopPropagation();\n      let target = e.target;\n      let display = target.getAttribute('data-display');\n      let command = target.getAttribute('data-command');\n      let className = target.className;\n\n      while (!command && !/editor_tool/.test(className) && !/sun-editor-id-toolbar/.test(className)) {\n        target = target.parentNode;\n        command = target.getAttribute('data-command');\n        display = target.getAttribute('data-display');\n        className = target.className;\n      }\n\n      if (!command && !display) return;\n      if (target.disabled) return;\n      editor.focus();\n      /** Dialog, Submenu */\n\n      if (display) {\n        if (/submenu/.test(display) && (target.nextElementSibling === null || target !== editor.submenuActiveButton)) {\n          editor.callPlugin(command, function () {\n            editor.submenuOn(target);\n          });\n          return;\n        } else if (/dialog/.test(display)) {\n          editor.callPlugin(command, function () {\n            editor.plugins.dialog.open.call(editor, command, false);\n          });\n          return;\n        }\n\n        editor.submenuOff();\n        return;\n      }\n      /** default command */\n\n\n      if (command) {\n        editor.commandHandler(target, command);\n      }\n    },\n    onMouseUp_wysiwyg: function () {\n      editor._editorRange();\n\n      if (editor._isBalloon) {\n        const range = editor.getRange();\n        if (range.collapsed) event._hideToolbar();else event._showToolbarBalloon(range);\n      }\n    },\n    onClick_wysiwyg: function (e) {\n      e.stopPropagation();\n      const targetElement = e.target;\n\n      if (/^IMG$/i.test(targetElement.nodeName)) {\n        e.preventDefault();\n        editor.callPlugin('image', function () {\n          const size = editor.plugins.resizing.call_controller_resize.call(editor, targetElement, 'image');\n          editor.plugins.image.onModifyMode.call(editor, targetElement, size);\n\n          if (!_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getParentElement(targetElement, '.sun-editor-id-image-container')) {\n            editor.plugins.image.openModify.call(editor, true);\n            editor.plugins.image.update_image.call(editor);\n            editor.controllersOff();\n          }\n        });\n        return;\n      }\n\n      if (/sun-editor-id-iframe-inner-resizing-cover/i.test(targetElement.className)) {\n        e.preventDefault();\n        editor.callPlugin('video', function () {\n          const iframe = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getChildElement(targetElement.parentNode, 'iframe');\n          const size = editor.plugins.resizing.call_controller_resize.call(editor, iframe, 'video');\n          editor.plugins.video.onModifyMode.call(editor, iframe, size);\n        });\n        return;\n      }\n\n      event._findButtonEffectTag();\n\n      const figcaption = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getParentElement(targetElement, 'FIGCAPTION');\n\n      if (figcaption && figcaption.getAttribute('contenteditable') !== 'ture') {\n        e.preventDefault();\n        figcaption.setAttribute('contenteditable', true);\n        figcaption.focus();\n\n        if (editor._isInline && !editor._inlineToolbarAttr.isShow) {\n          event._showToolbarInline();\n\n          const hideToolbar = function () {\n            event._hideToolbar();\n\n            _d.removeEventListener('click', hideToolbar);\n          };\n\n          _d.addEventListener('click', hideToolbar);\n        }\n      } else {\n        const td = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getParentElement(targetElement, _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCell);\n\n        if (td) {\n          if (editor.controllerArray.length === 0) {\n            editor.callPlugin('table', editor.plugins.table.call_controller_tableEdit.bind(editor, td));\n          }\n        }\n      }\n\n      if (userFunction.onClick) userFunction.onClick(e);\n    },\n    _showToolbarBalloon: function (rangeObj) {\n      const range = rangeObj || editor.getRange();\n      const padding = 20;\n      const toolbar = context.element.toolbar;\n\n      const selection = _w.getSelection();\n\n      let isDirTop;\n\n      if (selection.focusNode === selection.anchorNode) {\n        isDirTop = selection.focusOffset < selection.anchorOffset;\n      } else {\n        const childNodes = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getListChildNodes(range.commonAncestorContainer);\n        isDirTop = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getArrayIndex(childNodes, selection.focusNode) < _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getArrayIndex(childNodes, selection.anchorNode);\n      }\n\n      let rects = range.getClientRects();\n      rects = rects[isDirTop ? 0 : rects.length - 1];\n      toolbar.style.display = 'block';\n      const toolbarWidth = toolbar.offsetWidth;\n      const toolbarHeight = toolbar.offsetHeight;\n      let l = (isDirTop ? rects.left : rects.right) - context.element.topArea.offsetLeft + (_w.scrollX || _d.documentElement.scrollLeft) - toolbarWidth / 2;\n      let t = (isDirTop ? rects.top - toolbarHeight - 11 : rects.bottom + 11) - context.element.topArea.offsetTop + (_w.scrollY || _d.documentElement.scrollTop);\n      const overRight = l + toolbarWidth - context.element.topArea.offsetWidth;\n      toolbar.style.left = (l < 0 ? padding : overRight < 0 ? l : l - overRight - padding) + 'px';\n      toolbar.style.top = t + 'px';\n\n      if (isDirTop) {\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(context.element._arrow, 'arrow-up');\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(context.element._arrow, 'arrow-down');\n        context.element._arrow.style.top = toolbarHeight + 'px';\n      } else {\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(context.element._arrow, 'arrow-down');\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(context.element._arrow, 'arrow-up');\n        context.element._arrow.style.top = '-11px';\n      }\n\n      const arrow_width = context.element._arrow.offsetWidth;\n      const arrow_left = toolbarWidth / 2 + (l < 0 ? l - arrow_width : overRight < 0 ? 0 : overRight + arrow_width);\n      const arrow_point_width = arrow_width / 2;\n      context.element._arrow.style.left = (arrow_left < arrow_point_width ? arrow_point_width : arrow_left + arrow_point_width >= toolbarWidth ? arrow_left - arrow_point_width : arrow_left) + 'px';\n    },\n    _showToolbarInline: function () {\n      const toolbar = context.element.toolbar;\n      toolbar.style.display = 'block';\n      editor._inlineToolbarAttr.width = toolbar.style.width = context.option.toolbarWidth;\n      editor._inlineToolbarAttr.top = toolbar.style.top = -1 - toolbar.offsetHeight + 'px';\n      event.onScroll_window();\n      editor._inlineToolbarAttr.isShow = true;\n    },\n    _hideToolbar: function () {\n      context.element.toolbar.style.display = 'none';\n      editor._inlineToolbarAttr.isShow = false;\n    },\n    onKeyDown_wysiwyg: function (e) {\n      const keyCode = e.keyCode;\n      const shift = e.shiftKey;\n      const ctrl = e.ctrlKey || e.metaKey;\n      const alt = e.altKey;\n\n      if (editor._isBalloon) {\n        event._hideToolbar();\n      }\n\n      function shortcutCommand(keyCode) {\n        const key = event._shortcutKeyCode[keyCode];\n        if (!key) return false;\n        editor.commandHandler(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getFormatElement(editor.getSelectionNode()), key[0]);\n        _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].toggleClass(editor.commandMap[key[1]], 'on');\n        return true;\n      }\n      /** Shortcuts */\n\n\n      if (ctrl && !/^(?:16|17|18)$/.test(keyCode)) {\n        if (!(!shift && keyCode === 83) && shortcutCommand(keyCode)) {\n          e.preventDefault();\n          return;\n        }\n      }\n      /** default key action */\n\n\n      const selectionNode = editor.getSelectionNode();\n\n      switch (keyCode) {\n        case 8:\n          /**backspace key*/\n          if (_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormatElement(selectionNode) && _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(selectionNode.parentNode) && selectionNode.previousSibling === null) {\n            e.preventDefault();\n            e.stopPropagation();\n            selectionNode.innerHTML = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace;\n            return false;\n          }\n\n          break;\n\n        case 9:\n          /**tab key*/\n          e.preventDefault();\n          if (ctrl || alt) break;\n          editor.controllersOff();\n          let currentNode = selectionNode || editor.getSelectionNode();\n\n          while (!_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCell(currentNode) && !_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(currentNode)) {\n            currentNode = currentNode.parentNode;\n          }\n\n          if (currentNode && _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCell(currentNode)) {\n            const table = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getParentElement(currentNode, 'table');\n            const cells = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].getListChildren(table, _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isCell);\n            let idx = shift ? _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].prevIdx(cells, currentNode) : _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].nextIdx(cells, currentNode);\n            if (idx === cells.length && !shift) idx = 0;\n            if (idx === -1 && shift) idx = cells.length - 1;\n            const moveCell = cells[idx];\n            if (!moveCell) return false;\n            editor.setRange(moveCell, 0, moveCell, 0);\n            break;\n          }\n          /** format Tag */\n\n\n          const lines = editor.getSelectedFormatElements();\n\n          if (!shift) {\n            const tabText = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createTextNode(new Array(editor._variable.tabSize + 1).join('\\u00A0'));\n\n            if (lines.length === 1) {\n              editor.insertNode(tabText);\n              editor.setRange(tabText, editor._variable.tabSize, tabText, editor._variable.tabSize);\n            } else {\n              for (let i = 0, len = lines.length; i < len; i++) {\n                lines[i].insertBefore(tabText.cloneNode(false), lines[i].firstChild);\n              }\n            }\n          } else {\n            for (let i = 0, len = lines.length, child; i < len; i++) {\n              child = lines[i].firstChild;\n\n              if (/^\\s{1,4}$/.test(child.textContent)) {\n                _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(child);\n              } else if (/^\\s{1,4}/.test(child.textContent)) {\n                child.textContent = child.textContent.replace(/^\\s{1,4}/, '');\n              }\n            }\n          }\n\n          break;\n      }\n\n      if (userFunction.onKeyDown) userFunction.onKeyDown(e);\n    },\n    onKeyUp_wysiwyg: function (e) {\n      editor._editorRange();\n\n      editor.controllersOff();\n      const selectionNode = editor.getSelectionNode();\n\n      if (editor._isBalloon && !editor.getRange().collapsed) {\n        event._showToolbarBalloon();\n\n        return;\n      }\n      /** when format tag deleted */\n\n\n      if (e.keyCode === 8 && _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(selectionNode) && context.element.wysiwyg.textContent.length === 0) {\n        e.preventDefault();\n        e.stopPropagation();\n        const oFormatTag = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement(_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isFormatElement(editor._variable.currentNodes[0]) ? editor._variable.currentNodes[0] : 'P');\n        oFormatTag.innerHTML = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].zeroWidthSpace;\n        selectionNode.appendChild(oFormatTag);\n        editor.setRange(oFormatTag, 0, oFormatTag, 0);\n        return;\n      }\n\n      if ((_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(selectionNode.parentElement) || _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isRangeFormatElement(selectionNode.parentElement)) && selectionNode.nodeType === 3) {\n        editor.execCommand('formatBlock', false, _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].isWysiwygDiv(selectionNode.parentElement) ? 'P' : 'DIV');\n\n        event._findButtonEffectTag();\n\n        return;\n      }\n\n      if (event._directionKeyKeyCode.test(e.keyCode)) {\n        event._findButtonEffectTag();\n      }\n\n      if (userFunction.onKeyUp) userFunction.onKeyUp(e);\n    },\n    onScroll_wysiwyg: function (e) {\n      editor.controllersOff();\n      if (userFunction.onScroll) userFunction.onScroll(e);\n    },\n    onDrop_wysiwyg: function (e) {\n      const files = e.dataTransfer.files;\n\n      if (files.length > 0) {\n        e.stopPropagation();\n        e.preventDefault();\n        editor.focus();\n        editor.callPlugin('image', function () {\n          context.image.imgInputFile.files = files;\n          editor.plugins.image.onRender_imgInput.call(editor);\n          context.image.imgInputFile.files = null;\n        });\n      }\n\n      if (userFunction.onDrop) userFunction.onDrop(e);\n    },\n    onMouseDown_resizingBar: function (e) {\n      e.stopPropagation();\n      editor._variable.resizeClientY = e.clientY;\n      context.element.resizeBackground.style.display = 'block';\n\n      function closureFunc() {\n        context.element.resizeBackground.style.display = 'none';\n\n        _d.removeEventListener('mousemove', event._resize_editor);\n\n        _d.removeEventListener('mouseup', closureFunc);\n      }\n\n      _d.addEventListener('mousemove', event._resize_editor);\n\n      _d.addEventListener('mouseup', closureFunc);\n    },\n    _resize_editor: function (e) {\n      const resizeInterval = context.element.editorArea.offsetHeight + (e.clientY - editor._variable.resizeClientY);\n      context.element.wysiwyg.style.height = context.element.code.style.height = (resizeInterval < editor._variable.minResizingSize ? editor._variable.minResizingSize : resizeInterval) + 'px';\n      editor._variable.resizeClientY = e.clientY;\n    },\n    onResize_window: function () {\n      if (context.element.toolbar.offsetWidth === 0) return;\n\n      if (editor._variable.isFullScreen) {\n        editor._variable.innerHeight_fullScreen += _w.innerHeight - context.element.toolbar.offsetHeight - editor._variable.innerHeight_fullScreen;\n        context.element.editorArea.style.height = editor._variable.innerHeight_fullScreen + 'px';\n      } else if (editor._variable._sticky) {\n        context.element.toolbar.style.width = context.element.topArea.offsetWidth - 2 + 'px';\n        event.onScroll_window();\n      }\n\n      editor.controllersOff();\n    },\n    onScroll_window: function () {\n      if (editor._variable.isFullScreen || context.element.toolbar.offsetWidth === 0) return;\n      const element = context.element;\n      const editorHeight = element.editorArea.offsetHeight;\n      const editorTop = element.topArea.offsetTop - (editor._isInline ? element.toolbar.offsetHeight : 0);\n      const y = (this.scrollY || _d.documentElement.scrollTop) + context.option.stickyToolbar;\n\n      if (y < editorTop) {\n        event._offStickyToolbar(element);\n      } else if (y + editor._variable.minResizingSize >= editorHeight + editorTop) {\n        if (!editor._variable._sticky) event._onStickyToolbar(element);\n        element.toolbar.style.top = editorHeight + editorTop + context.option.stickyToolbar - y - editor._variable.minResizingSize + 'px';\n      } else if (y >= editorTop) {\n        event._onStickyToolbar(element);\n      }\n    },\n    _onStickyToolbar: function (element) {\n      if (!editor._isInline) {\n        element._stickyDummy.style.height = element.toolbar.offsetHeight + 'px';\n        element._stickyDummy.style.display = 'block';\n      }\n\n      element.toolbar.style.top = context.option.stickyToolbar + 'px';\n      element.toolbar.style.width = editor._isInline ? editor._inlineToolbarAttr.width : element.toolbar.offsetWidth + 'px';\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(element.toolbar, 'sun-editor-sticky');\n      editor._variable._sticky = true;\n    },\n    _offStickyToolbar: function (element) {\n      element._stickyDummy.style.display = 'none';\n      element.toolbar.style.top = editor._isInline ? editor._inlineToolbarAttr.top : '';\n      element.toolbar.style.width = editor._isInline ? editor._inlineToolbarAttr.width : '';\n      element.editorArea.style.marginTop = '';\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeClass(element.toolbar, 'sun-editor-sticky');\n      editor._variable._sticky = false;\n    },\n    _codeViewAutoScroll: function () {\n      context.element.code.style.height = context.element.code.scrollHeight + 'px';\n    },\n    onPaste_wysiwyg: function (e) {\n      if (!e.clipboardData.getData) return true;\n      const cleanData = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].cleanHTML(e.clipboardData.getData('text/html'));\n\n      if (cleanData) {\n        editor.execCommand('insertHTML', false, cleanData);\n        e.stopPropagation();\n        e.preventDefault();\n      }\n    }\n  };\n  /** add event listeners */\n\n  /** toolbar event */\n\n  context.element.toolbar.addEventListener('mousedown', event.onMouseDown_toolbar, false);\n  context.element.toolbar.addEventListener('click', event.onClick_toolbar, false);\n  /** editor area */\n\n  context.element.relative.addEventListener('click', editor.focus.bind(editor), false);\n  context.element.wysiwyg.addEventListener('mouseup', event.onMouseUp_wysiwyg, false);\n  context.element.wysiwyg.addEventListener('click', event.onClick_wysiwyg, false);\n  context.element.wysiwyg.addEventListener('scroll', event.onScroll_wysiwyg, false);\n  context.element.wysiwyg.addEventListener('keydown', event.onKeyDown_wysiwyg, false);\n  context.element.wysiwyg.addEventListener('keyup', event.onKeyUp_wysiwyg, false);\n  context.element.wysiwyg.addEventListener('drop', event.onDrop_wysiwyg, false);\n  context.element.wysiwyg.addEventListener('paste', event.onPaste_wysiwyg, false);\n  /** code view area auto line */\n\n  if (context.option.height === 'auto') context.element.code.addEventListener('keyup', event._codeViewAutoScroll, false);\n  /** resizingBar */\n\n  if (context.element.resizingBar) {\n    if (/\\d+/.test(context.option.height)) {\n      context.element.resizingBar.addEventListener('mousedown', event.onMouseDown_resizingBar, false);\n    } else {\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].addClass(context.element.resizingBar, 'none-resize');\n    }\n  }\n  /** inline editor */\n\n\n  if (editor._isInline) {\n    context.element.wysiwyg.addEventListener('focus', event._showToolbarInline, false);\n  }\n\n  if (editor._isInline || editor._isBalloon) {\n    context.element.wysiwyg.addEventListener('blur', event._hideToolbar, false);\n  }\n  /** window event */\n\n\n  _w.addEventListener('resize', event.onResize_window, false);\n\n  if (context.option.stickyToolbar > -1) _w.addEventListener('scroll', event.onScroll_window, false);\n  /** add plugin to plugins object */\n\n  if (plugins) {\n    Object.keys(plugins).map(function (key) {\n      let plugin = plugins[key];\n      editor.plugins[plugin.name] = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].copyObj(plugin);\n    });\n  }\n  /** User function */\n\n\n  const userFunction = {\n    /**\r\n     * @description Event functions\r\n     * @param {Object} event - Event Object\r\n     */\n    onScroll: null,\n    onClick: null,\n    onKeyDown: null,\n    onKeyUp: null,\n    onDrop: null,\n\n    /**\r\n     * @description Called when the image is uploaded or the uploaded image is deleted\r\n     * @param {Element} targetImgElement - Current img element\r\n     * @param {Number} index - Uploaded index\r\n     * @param {Boolean} isDelete - Whether or not it was called after the delete operation\r\n     */\n    onImageUpload: null,\n\n    /**\r\n     * @description Open a notice area\r\n     * @param {String} message - Notice message\r\n     */\n    noticeOpen: function (message) {\n      editor.addModule([_plugins_modules_notice__WEBPACK_IMPORTED_MODULE_1__[\"default\"]]);\n      _plugins_modules_notice__WEBPACK_IMPORTED_MODULE_1__[\"default\"].open.call(editor, message);\n    },\n\n    /**\r\n     * @description Close a notice area\r\n     */\n    noticeClose: function () {\n      editor.addModule([_plugins_modules_notice__WEBPACK_IMPORTED_MODULE_1__[\"default\"]]);\n      _plugins_modules_notice__WEBPACK_IMPORTED_MODULE_1__[\"default\"].close.call(editor);\n    },\n\n    /**\r\n     * @description Copying the contents of the editor to the original textarea\r\n     */\n    save: function () {\n      context.element.originElement.value = editor.getContents();\n    },\n\n    /**\r\n     * @description Gets the suneditor's context object. Contains settings, plugins, and cached element objects\r\n     * @returns {Object}\r\n     */\n    getContext: function () {\n      return context;\n    },\n\n    /**\r\n     * @description Gets the contents of the suneditor\r\n     * @returns {String}\r\n     */\n    getContents: function () {\n      return editor.getContents();\n    },\n\n    /**\r\n     * @description Gets uploaded images informations\r\n     * @returns {Array}\r\n     */\n    getImagesInfo: function () {\n      return editor._variable._imagesInfo;\n    },\n\n    /**\r\n     * @description Inserts an HTML element or HTML string or plain string at the current cursor position\r\n     * @param {Element|String} html - HTML Element or HTML string or plain string\r\n     */\n    insertHTML: function (html) {\n      if (!html.nodeType || html.nodeType !== 1) {\n        const template = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('template');\n        template.innerHTML = html;\n        html = template.firstChild || template.content.firstChild;\n      }\n\n      editor.insertNode(html);\n      editor.focus();\n    },\n\n    /**\r\n     * @description Change the contents of the suneditor\r\n     * @param {String} contents - Contents to Input\r\n     */\n    setContents: function (contents) {\n      if (editor._variable.wysiwygActive) {\n        context.element.wysiwyg.innerHTML = _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertContentsForEditor(contents);\n      } else {\n        context.element.code.value = contents;\n      }\n    },\n\n    /**\r\n     * @description Add contents to the suneditor\r\n     * @param {String} contents - Contents to Input\r\n     */\n    appendContents: function (contents) {\n      if (editor._variable.wysiwygActive) {\n        context.element.wysiwyg.innerHTML += _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].convertContentsForEditor(contents);\n      } else {\n        context.element.code.value += contents;\n      }\n    },\n\n    /**\r\n     * @description Disable the suneditor\r\n     */\n    disabled: function () {\n      context.tool.cover.style.display = 'block';\n      context.element.wysiwyg.setAttribute('contenteditable', false);\n      context.element.code.setAttribute('disabled', 'disabled');\n    },\n\n    /**\r\n     * @description Enabled the suneditor\r\n     */\n    enabled: function () {\n      context.tool.cover.style.display = 'none';\n      context.element.wysiwyg.setAttribute('contenteditable', true);\n      context.element.code.removeAttribute('disabled');\n    },\n\n    /**\r\n     * @description Show the suneditor\r\n     */\n    show: function () {\n      const topAreaStyle = context.element.topArea.style;\n      if (topAreaStyle.display === 'none') topAreaStyle.display = context.option.display;\n    },\n\n    /**\r\n     * @description Hide the suneditor\r\n     */\n    hide: function () {\n      context.element.topArea.style.display = 'none';\n    },\n\n    /**\r\n     * @description Destroy the suneditor\r\n     */\n    destroy: function () {\n      /** remove window event listeners */\n      _w.removeEventListener('resize', event.onResize_window);\n\n      _w.removeEventListener('scroll', event.onScroll_window);\n      /** remove element */\n\n\n      _util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].removeItem(context.element.topArea);\n      this.onScroll = null;\n      this.onClick = null;\n      this.onKeyDown = null;\n      this.onKeyUp = null;\n      this.onDrop = null;\n      this.save = null;\n      this.onImageUpload = null;\n      this.noticeOpen = null;\n      this.noticeClose = null;\n      this.getContext = null;\n      this.getContents = null;\n      this.getImagesInfo = null;\n      this.insertHTML = null;\n      this.setContents = null;\n      this.appendContents = null;\n      this.disabled = null;\n      this.enabled = null;\n      this.show = null;\n      this.hide = null;\n      this.destroy = null;\n      context = null;\n      plugins = null;\n      lang = null;\n    }\n  };\n  return userFunction;\n};\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (core);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/core.js\n");

/***/ }),

/***/ "./src/lib/util.js":
/*!*************************!*\
  !*** ./src/lib/util.js ***!
  \*************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n\n/**\r\n * @description utility function\r\n */\n\nconst util = {\n  _d: document,\n  _w: window,\n\n  /**\r\n   * @description Unicode Character 'ZERO WIDTH SPACE'\r\n   */\n  zeroWidthSpace: '\\u200B',\n\n  /**\r\n   * @description Gets XMLHttpRequest object\r\n   * @returns {Object}\r\n   */\n  getXMLHttpRequest: function () {\n    /** IE */\n    if (this._w.ActiveXObject) {\n      try {\n        return new ActiveXObject('Msxml2.XMLHTTP');\n      } catch (e) {\n        try {\n          return new ActiveXObject('Microsoft.XMLHTTP');\n        } catch (e1) {\n          return null;\n        }\n      }\n    }\n    /** netscape */\n    else if (this._w.XMLHttpRequest) {\n        return new XMLHttpRequest();\n      }\n      /** fail */\n      else {\n          return null;\n        }\n  },\n\n  /**\r\n   * @description Copies object\r\n   * @param {Object} obj - Object to be copy\r\n   * @returns {Object}\r\n   */\n  copyObj: function (obj) {\n    const copy = {};\n\n    for (let attr in obj) {\n      copy[attr] = obj[attr];\n    }\n\n    return copy;\n  },\n\n  /**\r\n   * @description Create Element node\r\n   * @param {String} elementName - Element name\r\n   * @returns {Element}\r\n   */\n  createElement: function (elementName) {\n    return this._d.createElement(elementName);\n  },\n\n  /**\r\n   * @description Create text node\r\n   * @param {String} text - text contents\r\n   * @returns {Node}\r\n   */\n  createTextNode: function (text) {\n    return this._d.createTextNode(text || '');\n  },\n\n  /**\r\n   * @description Get the the tag path of the arguments value\r\n   * If not found, return the first found value\r\n   * @param {Array} nameArray - File name array\r\n   * @param {String} extension - js, css\r\n   * @returns {String}\r\n   */\n  getIncludePath: function (nameArray, extension) {\n    let path = '';\n    const pathList = [];\n    const tagName = extension === 'js' ? 'script' : 'link';\n    const src = extension === 'js' ? 'src' : 'href';\n    let fileName = '(?:';\n\n    for (let i = 0, len = nameArray.length; i < len; i++) {\n      fileName += nameArray[i] + (i < len - 1 ? '|' : ')');\n    }\n\n    const regExp = new RegExp('(^|.*[\\\\\\\\\\/])' + fileName + '(\\\\.[^\\\\\\\\/]+)?\\.' + extension + '(?:\\\\?.*|;.*)?$', 'i');\n    const extRegExp = new RegExp('.+\\\\.' + extension + '(?:\\\\?.*|;.*)?$', 'i');\n\n    for (let c = this._d.getElementsByTagName(tagName), i = 0; i < c.length; i++) {\n      if (extRegExp.test(c[i][src])) {\n        pathList.push(c[i]);\n      }\n    }\n\n    for (let i = 0; i < pathList.length; i++) {\n      let editorTag = pathList[i][src].match(regExp);\n\n      if (editorTag) {\n        path = editorTag[0];\n        break;\n      }\n    }\n\n    if (path === '') path = pathList.length > 0 ? pathList[0][src] : '';\n    -1 === path.indexOf(':/') && '//' !== path.slice(0, 2) && (path = 0 === path.indexOf('/') ? location.href.match(/^.*?:\\/\\/[^\\/]*/)[0] + path : location.href.match(/^[^\\?]*\\/(?:)/)[0] + path);\n    if (!path) throw '[SUNEDITOR.util.getIncludePath.fail] The SUNEDITOR installation path could not be automatically detected. (name: +' + name + ', extension: ' + extension + ')';\n    return path;\n  },\n\n  /**\r\n   * @description Converts contents into a format that can be placed in an editor\r\n   * @param {String} contents - contents\r\n   * @returns {String}\r\n   */\n  convertContentsForEditor: function (contents) {\n    let tag,\n        baseHtml,\n        innerHTML = '';\n    contents = contents.trim();\n    tag = this._d.createRange().createContextualFragment(contents).childNodes;\n\n    for (let i = 0, len = tag.length; i < len; i++) {\n      baseHtml = tag[i].outerHTML || tag[i].textContent;\n\n      if (tag[i].nodeType === 3) {\n        const textArray = baseHtml.split(/\\n/g);\n        let text = '';\n\n        for (let t = 0, tLen = textArray.length; t < tLen; t++) {\n          text = textArray[t].trim();\n          if (text.length > 0) innerHTML += '<P>' + text + '</p>';\n        }\n      } else {\n        innerHTML += baseHtml;\n      }\n    }\n\n    const ec = {\n      '&': '&amp;',\n      '\\u00A0': '&nbsp;',\n      '\\'': '&quot;',\n      '<': '&lt;',\n      '>': '&gt;'\n    };\n    contents = contents.replace(/&|\\u00A0|'|<|>/g, function (m) {\n      return typeof ec[m] === 'string' ? ec[m] : m;\n    });\n    if (innerHTML.length === 0) innerHTML = '<p>' + (contents.length > 0 ? contents : this.zeroWidthSpace) + '</p>';\n    return innerHTML;\n  },\n\n  /**\r\n   * @description Converts HTML string into a format that can be placed in an editor of code view mode\r\n   * @param {String} html - HTML string\r\n   * @returns {String}\r\n   */\n  convertHTMLForCodeView: function (html) {\n    return html.replace(/\\s*<(?:li|td)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>/gi, this._insertIndent).replace(/<\\/?(?:blockquote|hr|ol|ul|table|tbody|thead|th|tr)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>(?=[^\\n])/gi, this._insertLineBreak).replace(/<\\/(?:p|div|h[1-6]|li|td|pre)>(?=[^\\n])/gi, this._insertLineBreak);\n  },\n\n  /**\r\n   * @description Add a line break to the open tag\r\n   * @param {String} matchTag - matched tag string\r\n   * @returns {String}\r\n   */\n  _insertIndent: function (matchTag) {\n    return '  ' + matchTag.trim();\n  },\n\n  /**\r\n   * @description Add a line breaks to the tags\r\n   * @param {String} matchTag - matched tag string\r\n   * @returns {String}\r\n   */\n  _insertLineBreak: function (matchTag) {\n    return matchTag + '\\n';\n  },\n\n  /**\r\n   * @description It is judged whether it is the edit region top div element.\r\n   * @param {Element} element - The element to check\r\n   * @returns {Boolean}\r\n   */\n  isWysiwygDiv: function (element) {\n    if (element && element.nodeType === 1 && this.hasClass(element, 'sun-editor-id-wysiwyg')) return true;\n    return false;\n  },\n\n  /**\r\n   * @description It is judged whether it is the format element (P, DIV, H1-6, LI, CODE)\r\n   * @param {Element} element - The element to check\r\n   * @returns {Boolean}\r\n   */\n  isFormatElement: function (element) {\n    if (element && element.nodeType === 1 && /^(?:P|DIV|H[1-6]|LI|CODE)$/i.test(element.nodeName) && !/sun-editor-id-comp/.test(element.className)) return true;\n    return false;\n  },\n\n  /**\r\n   * @description It is judged whether it is the range format element. (BLOCKQUOTE, TABLE, THEAD, TBODY, TH, TR, TD, OL, UL, PRE)\r\n   * * Range format element is wrap the format element  (P, DIV, H1-6, LI, CODE)\r\n   * @param {Element} element - The element to check\r\n   * @returns {Boolean}\r\n   */\n  isRangeFormatElement: function (element) {\n    if (element && element.nodeType === 1 && /^(?:BLOCKQUOTE|TABLE|THEAD|TBODY|TH|TR|TD|OL|UL|PRE|FIGCAPTION)$/i.test(element.nodeName)) return true;\n    return false;\n  },\n\n  /**\r\n   * @description Get format element of the argument value (P, DIV, H[1-6], LI)\r\n   * @param {Element} element - Reference element if null or no value, it is relative to the current focus node.\r\n   * @returns {Element}\r\n   */\n  getFormatElement: function (element) {\n    if (!element) return null;\n\n    while (!this.isFormatElement(element) && !this.isWysiwygDiv(element.parentNode)) {\n      element = element.parentNode;\n    }\n\n    if (this.isWysiwygDiv(element) || this.isRangeFormatElement(element)) {\n      const firstFormatElement = this.getListChildren(element, function (current) {\n        return this.isFormatElement(current);\n      }.bind(this))[0];\n      return firstFormatElement;\n    }\n\n    return element;\n  },\n\n  /**\r\n   * @description Get range format element of the argument value (blockquote, TABLE, TR, TD, OL, UL, PRE)\r\n   * @param {Element} element - Reference element if null or no value, it is relative to the current focus node.\r\n   * @returns {Element|null}\r\n   */\n  getRangeFormatElement: function (element) {\n    if (!element) return null;\n\n    while (!this.isRangeFormatElement(element) && !this.isWysiwygDiv(element)) {\n      element = element.parentNode;\n    }\n\n    return this.isWysiwygDiv(element) ? null : element;\n  },\n\n  /**\r\n   * @description Get the index of the argument value in the element array\r\n   * @param {array} array - element array\r\n   * @param {Element} element - Element to find index\r\n   * @returns {Number}\r\n   */\n  getArrayIndex: function (array, element) {\n    let idx = -1;\n\n    for (let i = 0, len = array.length; i < len; i++) {\n      if (array[i] === element) {\n        idx = i;\n        break;\n      }\n    }\n\n    return idx;\n  },\n\n  /**\r\n   * @description Get the next index of the argument value in the element array\r\n   * @param {array} array - element array\r\n   * @param {Element} item - Element to find index\r\n   * @returns {Number}\r\n   */\n  nextIdx: function (array, item) {\n    let idx = this.getArrayIndex(array, item);\n    if (idx === -1) return -1;\n    return idx + 1;\n  },\n\n  /**\r\n   * @description Get the previous index of the argument value in the element array\r\n   * @param {array} array - element array\r\n   * @param {Element} item - Element to find index\r\n   * @returns {Number}\r\n   */\n  prevIdx: function (array, item) {\n    let idx = this.getArrayIndex(array, item);\n    if (idx === -1) return -1;\n    return idx - 1;\n  },\n\n  /**\r\n   * @description Check the node is a table cell\r\n   * @param {Element} node - Nodes to check\r\n   * @returns {Boolean}\r\n   */\n  isCell: function (node) {\n    return node && /^(?:TD|TH)$/i.test(node.nodeName);\n  },\n\n  /**\r\n   * @description Check the node is a break node (BR)\r\n   * @param {Element} node - Nodes to check\r\n   * @returns {Boolean}\r\n   */\n  isBreak: function (node) {\n    return node && /^BR$/i.test(node.nodeName);\n  },\n\n  /**\r\n   * @description Get all child nodes of the argument value element (Without text node)\r\n   * @param {Element} element - element to get child node\r\n   * @param {(function|null)} validation - Conditional function\r\n   * @returns {Array}\r\n   */\n  getListChildren: function (element, validation) {\n    const children = [];\n    if (!element || !element.children) return children;\n\n    validation = validation || function () {\n      return true;\n    };\n\n    (function recursionFunc(current) {\n      if (element !== current && validation(current)) {\n        children.push(current);\n      }\n\n      for (let i = 0, len = current.children.length; i < len; i++) {\n        recursionFunc(current.children[i]);\n      }\n    })(element);\n\n    return children;\n  },\n\n  /**\r\n   * @description Get all child nodes of the argument value element (Include text nodes)\r\n   * @param {Element} element - element to get child node\r\n   * @param {(function|null)} validation - Conditional function\r\n   * @returns {Array}\r\n   */\n  getListChildNodes: function (element, validation) {\n    const children = [];\n    if (!element || !element.childNodes) return children;\n\n    validation = validation || function () {\n      return true;\n    };\n\n    (function recursionFunc(current) {\n      if (element !== current && validation(current)) {\n        children.push(current);\n      }\n\n      for (let i = 0, len = current.childNodes.length; i < len; i++) {\n        recursionFunc(current.childNodes[i]);\n      }\n    })(element);\n\n    return children;\n  },\n\n  /**\r\n   * @description Get the parent element of the argument value.\r\n   * A tag that satisfies the query condition is imported.\r\n   * Returns null if not found.\r\n   * @param {Node} element - Reference element\r\n   * @param {String|Function} query - Query String (tagName, .className, #ID, :name) or validation function.\r\n   * Not use it like jquery.\r\n   * Only one condition can be entered at a time.\r\n   * @returns {Element|null}\r\n   */\n  getParentElement: function (element, query) {\n    let check;\n\n    if (typeof query === 'function') {\n      check = query;\n    } else {\n      let attr;\n\n      if (/\\./.test(query)) {\n        attr = 'className';\n        query = query.split('.')[1];\n      } else if (/#/.test(query)) {\n        attr = 'id';\n        query = '^' + query.split('#')[1] + '$';\n      } else if (/:/.test(query)) {\n        attr = 'name';\n        query = '^' + query.split(':')[1] + '$';\n      } else {\n        attr = 'tagName';\n        query = '^' + query + '$';\n      }\n\n      const regExp = new RegExp(query, 'i');\n\n      check = function (el) {\n        return regExp.test(el[attr]);\n      };\n    }\n\n    while (element && (element.nodeType === 3 || !check(element))) {\n      if (this.isWysiwygDiv(element)) {\n        return null;\n      }\n\n      element = element.parentNode;\n    }\n\n    return element;\n  },\n\n  /**\r\n   * @description Get the child element of the argument value.\r\n   * A tag that satisfies the query condition is imported.\r\n   * Returns null if not found.\r\n   * @param {Node} element - Reference element\r\n   * @param {String|Function} query - Query String (tagName, .className, #ID, :name) or validation function.\r\n   * Not use it like jquery.\r\n   * Only one condition can be entered at a time.\r\n   * @returns {Element|null}\r\n   */\n  getChildElement: function (element, query) {\n    let check;\n\n    if (typeof query === 'function') {\n      check = query;\n    } else {\n      let attr;\n\n      if (/\\./.test(query)) {\n        attr = 'className';\n        query = query.split('.')[1];\n      } else if (/#/.test(query)) {\n        attr = 'id';\n        query = '^' + query.split('#')[1] + '$';\n      } else if (/:/.test(query)) {\n        attr = 'name';\n        query = '^' + query.split(':')[1] + '$';\n      } else {\n        attr = 'tagName';\n        query = '^' + query + '$';\n      }\n\n      const regExp = new RegExp(query, 'i');\n\n      check = function (el) {\n        return regExp.test(el[attr]);\n      };\n    }\n\n    const childList = this.getListChildren(element, function (current) {\n      return check(current);\n    });\n    return childList[0];\n  },\n\n  /**\r\n   * @description Returns the position of the left and top of argument. {left:0, top:0}\r\n   * @param {Element} element - Element node\r\n   * @returns {Object}\r\n   */\n  getOffset: function (element) {\n    let tableOffsetLeft = 0;\n    let tableOffsetTop = 0;\n    let tableElement = element.nodeType === 3 ? element.parentElement : element;\n\n    while (!this.isWysiwygDiv(tableElement.parentNode)) {\n      if (/^(A|TD|TH|FIGURE|FIGCAPTION|IMG|IFRAME)$/i.test(tableElement.nodeName) || /relative/i.test(tableElement.style.position)) {\n        tableOffsetLeft += tableElement.offsetLeft;\n        tableOffsetTop += tableElement.offsetTop;\n      }\n\n      tableElement = tableElement.parentNode;\n    }\n\n    return {\n      left: tableOffsetLeft,\n      top: tableOffsetTop - tableElement.parentNode.scrollTop\n    };\n  },\n\n  /**\r\n   * @description Set the text content value of the argument value element\r\n   * @param {Element} element - Element to replace text content\r\n   * @param {String} txt - Text to be applied\r\n   */\n  changeTxt: function (element, txt) {\n    if (!element || !txt) return;\n    element.textContent = txt;\n  },\n\n  /**\r\n   * @description Determine whether any of the matched elements are assigned the given class\r\n   * @param {Element} element - Elements to search class name\r\n   * @param {String} className - Class name to search for\r\n   * @returns {Boolean}\r\n   */\n  hasClass: function (element, className) {\n    if (!element) return;\n    return element.classList.contains(className.trim());\n  },\n\n  /**\r\n   * @description Append the className value of the argument value element\r\n   * @param {Element} element - Elements to add class name\r\n   * @param {String} className - Class name to be add\r\n   */\n  addClass: function (element, className) {\n    if (!element) return;\n    const check = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n    if (check.test(element.className)) return;\n    element.className += ' ' + className;\n  },\n\n  /**\r\n   * @description Delete the className value of the argument value element\r\n   * @param {Element} element - Elements to remove class name\r\n   * @param {String} className - Class name to be remove\r\n   */\n  removeClass: function (element, className) {\n    if (!element) return;\n    const check = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n    element.className = element.className.replace(check, ' ').trim();\n  },\n\n  /**\r\n   * @description Argument value If there is no class name, insert it and delete the class name if it exists\r\n   * @param {Element} element - Elements to replace class name\r\n   * @param {String} className - Class name to be change\r\n   */\n  toggleClass: function (element, className) {\n    if (!element) return;\n    const check = new RegExp('(\\\\s|^)' + className + '(\\\\s|$)');\n\n    if (check.test(element.className)) {\n      element.className = element.className.replace(check, ' ').trim();\n    } else {\n      element.className += ' ' + className;\n    }\n  },\n\n  /**\r\n   * @description Delete argumenu value element\r\n   * @param {Element} item - Element to be remove\r\n   */\n  removeItem: function (item) {\n    try {\n      item.remove();\n    } catch (e) {\n      item.parentNode.removeChild(item);\n    }\n  },\n\n  /**\r\n   * @description Delete a empty child node of argument element\r\n   * @param {Element} element - Element node\r\n   */\n  removeEmptyNode: function (element) {\n    (function recursionFunc(current) {\n      if (current.textContent.trim().length === 0 && !/^BR$/i.test(current.nodeName) && (!current.firstChild || !/^BR$/i.test(current.firstChild.nodeName))) {\n        current.parentNode && current.parentNode.removeChild(current);\n      } else {\n        for (let i = 0, len = current.children.length; i < len; i++) {\n          if (!current.children[i]) continue;\n          recursionFunc(current.children[i]);\n        }\n      }\n    })(element);\n  },\n\n  /**\r\n   * @description Gets the clean HTML code for editor\r\n   * @param {String} html - HTML string\r\n   */\n  cleanHTML: function (html) {\n    const tagsAllowed = new RegExp('^(P|DIV|PRE|H1|H2|H3|H4|H5|H6|B|U|I|STRIKE|SUB|SUP|OL|UL|TABLE|BR|HR|A|IMG|IFRAME)$', 'i');\n\n    const domTree = this._d.createRange().createContextualFragment(html).children;\n\n    let cleanHTML = '';\n\n    for (let i = 0, len = domTree.length; i < len; i++) {\n      if (tagsAllowed.test(domTree[i].nodeName)) {\n        cleanHTML += domTree[i].outerHTML.replace(/<!--(.*?)-->/g, '').replace(/<[a-zA-Z]+\\:[a-zA-Z]+.*>(\\n|.)*<\\/[a-zA-Z]+\\:[a-zA-Z]+>/g, '').replace(/\\s(?:style|class|dir|xmlns|data-[a-z\\-]+)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*/ig, '').replace(/<\\/?(?:span|font)\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>/ig, '').replace(/<\\/?[a-z]+:[a-z]+\\s*(?:[a-z\\-]+)?\\s*(?:=\"?[^>]*\"?)?\\s*>/ig, '');\n      }\n    }\n\n    return cleanHTML || html;\n  }\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (util);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/lib/util.js\n");

/***/ }),

/***/ "./src/plugins/modules/notice.js":
/*!***************************************!*\
  !*** ./src/plugins/modules/notice.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../lib/util */ \"./src/lib/util.js\");\n/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'notice',\n  add: function (core) {\n    const context = core.context;\n    context.notice = {};\n    /** dialog */\n\n    let notice_div = _lib_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('DIV');\n    let notice_span = _lib_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('SPAN');\n    let notice_button = _lib_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].createElement('BUTTON');\n    notice_div.className = 'sun-editor-id-notice';\n    notice_button.className = 'close';\n    notice_button.setAttribute('aria-label', 'Close');\n    notice_button.setAttribute('title', core.lang.dialogBox.close);\n    notice_button.innerHTML = '<div aria-hidden=\"true\" data-command=\"close\" class=\"icon-cancel\"></div>';\n    notice_div.appendChild(notice_span);\n    notice_div.appendChild(notice_button);\n    context.notice.modal = notice_div;\n    context.notice.message = notice_span;\n    /** add event listeners */\n\n    notice_button.addEventListener('click', this.onClick_cancel.bind(core));\n    /** append html */\n\n    context.element.editorArea.insertBefore(notice_div, context.element.wysiwyg);\n    /** empty memory */\n\n    notice_div = null;\n  },\n  onClick_cancel: function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    this.plugins.notice.close.call(this);\n  },\n  open: function (text) {\n    this.context.notice.message.textContent = text;\n    this.context.notice.modal.style.display = 'block';\n  },\n  close: function () {\n    this.context.notice.modal.style.display = 'none';\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcGx1Z2lucy9tb2R1bGVzL25vdGljZS5qcy5qcyIsInNvdXJjZXMiOlsid2VicGFjazovLy8uL3NyYy9wbHVnaW5zL21vZHVsZXMvbm90aWNlLmpzPzNjMDUiXSwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogd3lzaXd5ZyB3ZWIgZWRpdG9yXHJcbiAqXHJcbiAqIHN1bmVkaXRvci5qc1xyXG4gKiBDb3B5cmlnaHQgMjAxNyBKaUhvbmcgTGVlLlxyXG4gKiBNSVQgbGljZW5zZS5cclxuICovXHJcbid1c2Ugc3RyaWN0JztcclxuXHJcbmltcG9ydCB1dGlsIGZyb20gJy4uLy4uL2xpYi91dGlsJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IHtcclxuICAgIG5hbWU6ICdub3RpY2UnLFxyXG4gICAgYWRkOiBmdW5jdGlvbiAoY29yZSkge1xyXG4gICAgICAgIGNvbnN0IGNvbnRleHQgPSBjb3JlLmNvbnRleHQ7XHJcbiAgICAgICAgY29udGV4dC5ub3RpY2UgPSB7fTtcclxuXHJcbiAgICAgICAgLyoqIGRpYWxvZyAqL1xyXG4gICAgICAgIGxldCBub3RpY2VfZGl2ID0gdXRpbC5jcmVhdGVFbGVtZW50KCdESVYnKTtcclxuICAgICAgICBsZXQgbm90aWNlX3NwYW4gPSB1dGlsLmNyZWF0ZUVsZW1lbnQoJ1NQQU4nKTtcclxuICAgICAgICBsZXQgbm90aWNlX2J1dHRvbiA9IHV0aWwuY3JlYXRlRWxlbWVudCgnQlVUVE9OJyk7XHJcblxyXG4gICAgICAgIG5vdGljZV9kaXYuY2xhc3NOYW1lID0gJ3N1bi1lZGl0b3ItaWQtbm90aWNlJztcclxuICAgICAgICBub3RpY2VfYnV0dG9uLmNsYXNzTmFtZSA9ICdjbG9zZSc7XHJcbiAgICAgICAgbm90aWNlX2J1dHRvbi5zZXRBdHRyaWJ1dGUoJ2FyaWEtbGFiZWwnLCAnQ2xvc2UnKTtcclxuICAgICAgICBub3RpY2VfYnV0dG9uLnNldEF0dHJpYnV0ZSgndGl0bGUnLCBjb3JlLmxhbmcuZGlhbG9nQm94LmNsb3NlKTtcclxuICAgICAgICBub3RpY2VfYnV0dG9uLmlubmVySFRNTCA9ICc8ZGl2IGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtY29tbWFuZD1cImNsb3NlXCIgY2xhc3M9XCJpY29uLWNhbmNlbFwiPjwvZGl2Pic7XHJcbiAgICAgICAgXHJcbiAgICAgICAgbm90aWNlX2Rpdi5hcHBlbmRDaGlsZChub3RpY2Vfc3Bhbik7XHJcbiAgICAgICAgbm90aWNlX2Rpdi5hcHBlbmRDaGlsZChub3RpY2VfYnV0dG9uKTtcclxuXHJcbiAgICAgICAgY29udGV4dC5ub3RpY2UubW9kYWwgPSBub3RpY2VfZGl2O1xyXG4gICAgICAgIGNvbnRleHQubm90aWNlLm1lc3NhZ2UgPSBub3RpY2Vfc3BhbjtcclxuXHJcbiAgICAgICAgLyoqIGFkZCBldmVudCBsaXN0ZW5lcnMgKi9cclxuICAgICAgICBub3RpY2VfYnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5vbkNsaWNrX2NhbmNlbC5iaW5kKGNvcmUpKTtcclxuICAgICAgICBcclxuICAgICAgICAvKiogYXBwZW5kIGh0bWwgKi9cclxuICAgICAgICBjb250ZXh0LmVsZW1lbnQuZWRpdG9yQXJlYS5pbnNlcnRCZWZvcmUobm90aWNlX2RpdiwgY29udGV4dC5lbGVtZW50Lnd5c2l3eWcpO1xyXG4gICAgICAgIFxyXG4gICAgICAgIC8qKiBlbXB0eSBtZW1vcnkgKi9cclxuICAgICAgICBub3RpY2VfZGl2ID0gbnVsbDtcclxuICAgIH0sXHJcblxyXG4gICAgb25DbGlja19jYW5jZWw6IGZ1bmN0aW9uIChlKSB7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5wbHVnaW5zLm5vdGljZS5jbG9zZS5jYWxsKHRoaXMpO1xyXG4gICAgfSxcclxuXHJcbiAgICBvcGVuOiBmdW5jdGlvbiAodGV4dCkgIHtcclxuICAgICAgICB0aGlzLmNvbnRleHQubm90aWNlLm1lc3NhZ2UudGV4dENvbnRlbnQgPSB0ZXh0O1xyXG4gICAgICAgIHRoaXMuY29udGV4dC5ub3RpY2UubW9kYWwuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcbiAgICB9LFxyXG5cclxuICAgIGNsb3NlOiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgdGhpcy5jb250ZXh0Lm5vdGljZS5tb2RhbC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgfVxyXG59O1xyXG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQUE7QUFBQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUE5Q0EiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/plugins/modules/notice.js\n");

/***/ }),

/***/ "./src/suneditor.js":
/*!**************************!*\
  !*** ./src/suneditor.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _lib_util__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./lib/util */ \"./src/lib/util.js\");\n/* harmony import */ var _lib_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./lib/core */ \"./src/lib/core.js\");\n/* harmony import */ var _lib_constructor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./lib/constructor */ \"./src/lib/constructor.js\");\n/* harmony import */ var _lib_context__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./lib/context */ \"./src/lib/context.js\");\n/* harmony import */ var _lang_en__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lang/en */ \"./src/lang/en.js\");\n/*\r\n * wysiwyg web editor\r\n *\r\n * suneditor.js\r\n * Copyright 2017 JiHong Lee.\r\n * MIT license.\r\n */\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  /**\r\n   * @description Returns the create function with preset options.\r\n   * If the options overlap, the options of the 'create' function take precedence.\r\n   * @param {Json} options - Initialization options\r\n   * @returns {function}\r\n   */\n  init: function (init_options) {\n    const self = this;\n    return {\n      create: function (idOrElement, options) {\n        return self.create(idOrElement, options, init_options);\n      }\n    };\n  },\n\n  /**\r\n   * @description Create the suneditor\r\n   * @param {String|Element} idOrElement - textarea Id or textarea element\r\n   * @param {Json} options - user options\r\n   * @returns {{save: save, getContext: getContext, getContent: getContent, setContent: setContent, appendContent: appendContent, disabled: disabled, enabled: enabled, show: show, hide: hide, destroy: destroy}}\r\n   */\n  create: function (idOrElement, options, _init_options) {\n    if (typeof options !== 'object') options = {};\n\n    if (_init_options) {\n      // options = Object.assign(util.copyObj(_init_options), options);\n      options = [_lib_util__WEBPACK_IMPORTED_MODULE_0__[\"default\"].copyObj(_init_options), options].reduce(function (init, option) {\n        Object.keys(option).forEach(function (key) {\n          init[key] = option[key];\n        });\n        return init;\n      }, {});\n    }\n\n    const element = typeof idOrElement === 'string' ? document.getElementById(idOrElement) : idOrElement;\n\n    if (!element) {\n      if (typeof idOrElement === 'string') {\n        throw Error('[SUNEDITOR.create.fail] The element for that id was not found (ID:\"' + idOrElement + '\")');\n      }\n\n      throw Error('[SUNEDITOR.create.fail] suneditor requires textarea\\'s element or id value');\n    }\n\n    const cons = _lib_constructor__WEBPACK_IMPORTED_MODULE_2__[\"default\"].init(element, options, options.lang || _lang_en__WEBPACK_IMPORTED_MODULE_4__[\"default\"], options.plugins);\n\n    if (cons.constructed._top.id && document.getElementById(cons.constructed._top.id)) {\n      throw Error('[SUNEDITOR.create.fail] The ID of the suneditor you are trying to create already exists (ID:\"' + cons.constructed._top.id + '\")');\n    }\n\n    element.style.display = 'none';\n    cons.constructed._top.style.display = 'block';\n    /** Create to sibling node */\n\n    if (typeof element.nextElementSibling === 'object') {\n      element.parentNode.insertBefore(cons.constructed._top, element.nextElementSibling);\n    } else {\n      element.parentNode.appendChild(cons.constructed._top);\n    }\n\n    return Object(_lib_core__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(Object(_lib_context__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(element, cons.constructed, cons.options), cons.plugins, cons.options.lang);\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvc3VuZWRpdG9yLmpzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vLy4vc3JjL3N1bmVkaXRvci5qcz9iNTliIl0sInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIHd5c2l3eWcgd2ViIGVkaXRvclxyXG4gKlxyXG4gKiBzdW5lZGl0b3IuanNcclxuICogQ29weXJpZ2h0IDIwMTcgSmlIb25nIExlZS5cclxuICogTUlUIGxpY2Vuc2UuXHJcbiAqL1xyXG4ndXNlIHN0cmljdCc7XHJcblxyXG5pbXBvcnQgdXRpbCBmcm9tICcuL2xpYi91dGlsJztcclxuaW1wb3J0IGNvcmUgZnJvbSAnLi9saWIvY29yZSc7XHJcbmltcG9ydCBfQ29uc3RydWN0b3IgZnJvbSAnLi9saWIvY29uc3RydWN0b3InO1xyXG5pbXBvcnQgX0NvbnRleHQgZnJvbSAnLi9saWIvY29udGV4dCc7XHJcbmltcG9ydCBfZGVmYXVsdExhbmcgZnJvbSAnLi9sYW5nL2VuJztcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCB7XHJcbiAgICAvKipcclxuICAgICAqIEBkZXNjcmlwdGlvbiBSZXR1cm5zIHRoZSBjcmVhdGUgZnVuY3Rpb24gd2l0aCBwcmVzZXQgb3B0aW9ucy5cclxuICAgICAqIElmIHRoZSBvcHRpb25zIG92ZXJsYXAsIHRoZSBvcHRpb25zIG9mIHRoZSAnY3JlYXRlJyBmdW5jdGlvbiB0YWtlIHByZWNlZGVuY2UuXHJcbiAgICAgKiBAcGFyYW0ge0pzb259IG9wdGlvbnMgLSBJbml0aWFsaXphdGlvbiBvcHRpb25zXHJcbiAgICAgKiBAcmV0dXJucyB7ZnVuY3Rpb259XHJcbiAgICAgKi9cclxuICAgIGluaXQ6IGZ1bmN0aW9uIChpbml0X29wdGlvbnMpIHtcclxuICAgICAgICBjb25zdCBzZWxmID0gdGhpcztcclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgY3JlYXRlOiBmdW5jdGlvbiAoaWRPckVsZW1lbnQsIG9wdGlvbnMpIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBzZWxmLmNyZWF0ZShpZE9yRWxlbWVudCwgb3B0aW9ucywgaW5pdF9vcHRpb25zKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH07XHJcbiAgICB9LFxyXG5cclxuICAgIC8qKlxyXG4gICAgICogQGRlc2NyaXB0aW9uIENyZWF0ZSB0aGUgc3VuZWRpdG9yXHJcbiAgICAgKiBAcGFyYW0ge1N0cmluZ3xFbGVtZW50fSBpZE9yRWxlbWVudCAtIHRleHRhcmVhIElkIG9yIHRleHRhcmVhIGVsZW1lbnRcclxuICAgICAqIEBwYXJhbSB7SnNvbn0gb3B0aW9ucyAtIHVzZXIgb3B0aW9uc1xyXG4gICAgICogQHJldHVybnMge3tzYXZlOiBzYXZlLCBnZXRDb250ZXh0OiBnZXRDb250ZXh0LCBnZXRDb250ZW50OiBnZXRDb250ZW50LCBzZXRDb250ZW50OiBzZXRDb250ZW50LCBhcHBlbmRDb250ZW50OiBhcHBlbmRDb250ZW50LCBkaXNhYmxlZDogZGlzYWJsZWQsIGVuYWJsZWQ6IGVuYWJsZWQsIHNob3c6IHNob3csIGhpZGU6IGhpZGUsIGRlc3Ryb3k6IGRlc3Ryb3l9fVxyXG4gICAgICovXHJcbiAgICBjcmVhdGU6IGZ1bmN0aW9uIChpZE9yRWxlbWVudCwgb3B0aW9ucywgX2luaXRfb3B0aW9ucykge1xyXG4gICAgICAgIGlmICh0eXBlb2Ygb3B0aW9ucyAhPT0gJ29iamVjdCcpIG9wdGlvbnMgPSB7fTtcclxuICAgICAgICBpZiAoX2luaXRfb3B0aW9ucykge1xyXG4gICAgICAgICAgICAvLyBvcHRpb25zID0gT2JqZWN0LmFzc2lnbih1dGlsLmNvcHlPYmooX2luaXRfb3B0aW9ucyksIG9wdGlvbnMpO1xyXG4gICAgICAgICAgICBvcHRpb25zID0gIFt1dGlsLmNvcHlPYmooX2luaXRfb3B0aW9ucyksIG9wdGlvbnNdLnJlZHVjZShmdW5jdGlvbiAoaW5pdCwgb3B0aW9uKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBPYmplY3Qua2V5cyhvcHRpb24pLmZvckVhY2goZnVuY3Rpb24gKGtleSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluaXRba2V5XSA9IG9wdGlvbltrZXldO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gaW5pdDtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSwge30pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBcclxuICAgICAgICBjb25zdCBlbGVtZW50ID0gdHlwZW9mIGlkT3JFbGVtZW50ID09PSAnc3RyaW5nJyA/IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkT3JFbGVtZW50KSA6IGlkT3JFbGVtZW50O1xyXG5cclxuICAgICAgICBpZiAoIWVsZW1lbnQpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBpZE9yRWxlbWVudCA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgICAgICAgICAgIHRocm93IEVycm9yKCdbU1VORURJVE9SLmNyZWF0ZS5mYWlsXSBUaGUgZWxlbWVudCBmb3IgdGhhdCBpZCB3YXMgbm90IGZvdW5kIChJRDpcIicgKyBpZE9yRWxlbWVudCArICdcIiknKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgdGhyb3cgRXJyb3IoJ1tTVU5FRElUT1IuY3JlYXRlLmZhaWxdIHN1bmVkaXRvciByZXF1aXJlcyB0ZXh0YXJlYVxcJ3MgZWxlbWVudCBvciBpZCB2YWx1ZScpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY29uc3QgY29ucyA9IF9Db25zdHJ1Y3Rvci5pbml0KGVsZW1lbnQsIG9wdGlvbnMsIChvcHRpb25zLmxhbmcgfHwgIF9kZWZhdWx0TGFuZyksIG9wdGlvbnMucGx1Z2lucyk7XHJcblxyXG4gICAgICAgIGlmIChjb25zLmNvbnN0cnVjdGVkLl90b3AuaWQgJiYgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoY29ucy5jb25zdHJ1Y3RlZC5fdG9wLmlkKSkge1xyXG4gICAgICAgICAgICB0aHJvdyBFcnJvcignW1NVTkVESVRPUi5jcmVhdGUuZmFpbF0gVGhlIElEIG9mIHRoZSBzdW5lZGl0b3IgeW91IGFyZSB0cnlpbmcgdG8gY3JlYXRlIGFscmVhZHkgZXhpc3RzIChJRDpcIicgKyBjb25zLmNvbnN0cnVjdGVkLl90b3AuaWQgKyAnXCIpJyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBlbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgY29ucy5jb25zdHJ1Y3RlZC5fdG9wLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cclxuICAgICAgICAvKiogQ3JlYXRlIHRvIHNpYmxpbmcgbm9kZSAqL1xyXG4gICAgICAgIGlmICh0eXBlb2YgZWxlbWVudC5uZXh0RWxlbWVudFNpYmxpbmcgPT09ICdvYmplY3QnKSB7XHJcbiAgICAgICAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoY29ucy5jb25zdHJ1Y3RlZC5fdG9wLCBlbGVtZW50Lm5leHRFbGVtZW50U2libGluZyk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgZWxlbWVudC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKGNvbnMuY29uc3RydWN0ZWQuX3RvcCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICByZXR1cm4gY29yZShfQ29udGV4dChlbGVtZW50LCBjb25zLmNvbnN0cnVjdGVkLCBjb25zLm9wdGlvbnMpLCBjb25zLnBsdWdpbnMsIGNvbnMub3B0aW9ucy5sYW5nKTtcclxuICAgIH1cclxufTtcclxuIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTs7Ozs7OztBQU9BO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0E7QUFDQTs7Ozs7O0FBTUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBSEE7QUFLQTtBQUNBO0FBQ0E7Ozs7OztBQU1BO0FBQ0E7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUE5REEiLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/suneditor.js\n");

/***/ }),

/***/ "./test/dev/custom_plugin_submenu.js":
/*!*******************************************!*\
  !*** ./test/dev/custom_plugin_submenu.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n // ex) A submenu plugin that appends the contents of the input element to the editor\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  // plugin name (Required)\n  name: 'custom_plugin_submenu',\n  // add function - It is called only once when the plugin is first run.\n  // This function generates HTML to append and register the event.\n  // arguments - (core : core object, targetElement : clicked button element)\n  add: function (core, targetElement) {\n    // Registering a namespace for caching as a plugin name in the context object\n    const context = core.context;\n    context.custom = {\n      textElement: null\n    }; // Generate submenu HTML\n\n    let listDiv = eval(this.setSubmenu(core.lang)); // Input tag caching\n\n    context.custom.textElement = listDiv.getElementsByTagName('INPUT')[0]; // In addition to the button, elements that should operate within the submenu, such as focus,\n    // must call stopPropagation in the mousedown event to prevent the toolbar from executing events.\n\n    context.custom.textElement.addEventListener('mousedown', function (e) {\n      e.stopPropagation();\n    }); // You must bind \"core\" object when registering an event.\n\n    /** add event listeners */\n\n    listDiv.getElementsByTagName('BUTTON')[0].addEventListener('click', this.onClick.bind(core));\n    context.custom.textElement.addEventListener('mousedown', function () {});\n    /** append html */\n\n    targetElement.parentNode.appendChild(listDiv);\n  },\n  setSubmenu: function () {\n    const listDiv = document.createElement('DIV');\n    listDiv.className = 'sun-editor-submenu layer_editor layer_align';\n    listDiv.style.display = 'none';\n    listDiv.innerHTML = '' + '<div class=\"inner_layer\">' + '   <ul class=\"list_editor\">' + '       <li><input type=\"text\" placeholder=\"insert text\" style=\"width: 100%; border: 1px solid #CCC;\" /></li>' + '       <li><button type=\"button\" class=\"btn_editor\" title=\"Append text\">Append text</button></li>' + '   </ul>' + '</div>';\n    return listDiv;\n  },\n  onClick: function () {\n    // Get Input value\n    const value = document.createTextNode(this.context.custom.textElement.value); // insert\n\n    this.insertNode(value); // focus\n\n    this.focus();\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi90ZXN0L2Rldi9jdXN0b21fcGx1Z2luX3N1Ym1lbnUuanMuanMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi90ZXN0L2Rldi9jdXN0b21fcGx1Z2luX3N1Ym1lbnUuanM/NjAwZSJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG4vLyBleCkgQSBzdWJtZW51IHBsdWdpbiB0aGF0IGFwcGVuZHMgdGhlIGNvbnRlbnRzIG9mIHRoZSBpbnB1dCBlbGVtZW50IHRvIHRoZSBlZGl0b3JcclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gICAgLy8gcGx1Z2luIG5hbWUgKFJlcXVpcmVkKVxyXG4gICAgbmFtZTogJ2N1c3RvbV9wbHVnaW5fc3VibWVudScsXHJcblxyXG4gICAgLy8gYWRkIGZ1bmN0aW9uIC0gSXQgaXMgY2FsbGVkIG9ubHkgb25jZSB3aGVuIHRoZSBwbHVnaW4gaXMgZmlyc3QgcnVuLlxyXG4gICAgLy8gVGhpcyBmdW5jdGlvbiBnZW5lcmF0ZXMgSFRNTCB0byBhcHBlbmQgYW5kIHJlZ2lzdGVyIHRoZSBldmVudC5cclxuICAgIC8vIGFyZ3VtZW50cyAtIChjb3JlIDogY29yZSBvYmplY3QsIHRhcmdldEVsZW1lbnQgOiBjbGlja2VkIGJ1dHRvbiBlbGVtZW50KVxyXG4gICAgYWRkOiBmdW5jdGlvbiAoY29yZSwgdGFyZ2V0RWxlbWVudCkge1xyXG5cclxuICAgICAgICAvLyBSZWdpc3RlcmluZyBhIG5hbWVzcGFjZSBmb3IgY2FjaGluZyBhcyBhIHBsdWdpbiBuYW1lIGluIHRoZSBjb250ZXh0IG9iamVjdFxyXG4gICAgICAgIGNvbnN0IGNvbnRleHQgPSBjb3JlLmNvbnRleHQ7XHJcbiAgICAgICAgY29udGV4dC5jdXN0b20gPSB7XHJcbiAgICAgICAgICAgIHRleHRFbGVtZW50OiBudWxsXHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgLy8gR2VuZXJhdGUgc3VibWVudSBIVE1MXHJcbiAgICAgICAgbGV0IGxpc3REaXYgPSBldmFsKHRoaXMuc2V0U3VibWVudShjb3JlLmxhbmcpKTtcclxuXHJcbiAgICAgICAgLy8gSW5wdXQgdGFnIGNhY2hpbmdcclxuICAgICAgICBjb250ZXh0LmN1c3RvbS50ZXh0RWxlbWVudCA9IGxpc3REaXYuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ0lOUFVUJylbMF07XHJcblxyXG4gICAgICAgIC8vIEluIGFkZGl0aW9uIHRvIHRoZSBidXR0b24sIGVsZW1lbnRzIHRoYXQgc2hvdWxkIG9wZXJhdGUgd2l0aGluIHRoZSBzdWJtZW51LCBzdWNoIGFzIGZvY3VzLFxyXG4gICAgICAgIC8vIG11c3QgY2FsbCBzdG9wUHJvcGFnYXRpb24gaW4gdGhlIG1vdXNlZG93biBldmVudCB0byBwcmV2ZW50IHRoZSB0b29sYmFyIGZyb20gZXhlY3V0aW5nIGV2ZW50cy5cclxuICAgICAgICBjb250ZXh0LmN1c3RvbS50ZXh0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWRvd24nLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICAvLyBZb3UgbXVzdCBiaW5kIFwiY29yZVwiIG9iamVjdCB3aGVuIHJlZ2lzdGVyaW5nIGFuIGV2ZW50LlxyXG4gICAgICAgIC8qKiBhZGQgZXZlbnQgbGlzdGVuZXJzICovXHJcbiAgICAgICAgbGlzdERpdi5nZXRFbGVtZW50c0J5VGFnTmFtZSgnQlVUVE9OJylbMF0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLm9uQ2xpY2suYmluZChjb3JlKSk7XHJcbiAgICAgICAgY29udGV4dC5jdXN0b20udGV4dEVsZW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgLyoqIGFwcGVuZCBodG1sICovXHJcbiAgICAgICAgdGFyZ2V0RWxlbWVudC5wYXJlbnROb2RlLmFwcGVuZENoaWxkKGxpc3REaXYpO1xyXG4gICAgfSxcclxuXHJcbiAgICBzZXRTdWJtZW51OiBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgY29uc3QgbGlzdERpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ0RJVicpO1xyXG5cclxuICAgICAgICBsaXN0RGl2LmNsYXNzTmFtZSA9ICdzdW4tZWRpdG9yLXN1Ym1lbnUgbGF5ZXJfZWRpdG9yIGxheWVyX2FsaWduJztcclxuICAgICAgICBsaXN0RGl2LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgbGlzdERpdi5pbm5lckhUTUwgPSAnJyArXHJcbiAgICAgICAgICAgICc8ZGl2IGNsYXNzPVwiaW5uZXJfbGF5ZXJcIj4nICtcclxuICAgICAgICAgICAgJyAgIDx1bCBjbGFzcz1cImxpc3RfZWRpdG9yXCI+JyArXHJcbiAgICAgICAgICAgICcgICAgICAgPGxpPjxpbnB1dCB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiaW5zZXJ0IHRleHRcIiBzdHlsZT1cIndpZHRoOiAxMDAlOyBib3JkZXI6IDFweCBzb2xpZCAjQ0NDO1wiIC8+PC9saT4nICtcclxuICAgICAgICAgICAgJyAgICAgICA8bGk+PGJ1dHRvbiB0eXBlPVwiYnV0dG9uXCIgY2xhc3M9XCJidG5fZWRpdG9yXCIgdGl0bGU9XCJBcHBlbmQgdGV4dFwiPkFwcGVuZCB0ZXh0PC9idXR0b24+PC9saT4nICtcclxuICAgICAgICAgICAgJyAgIDwvdWw+JyArXHJcbiAgICAgICAgICAgICc8L2Rpdj4nO1xyXG5cclxuICAgICAgICByZXR1cm4gbGlzdERpdjtcclxuICAgIH0sXHJcblxyXG4gICAgb25DbGljazogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIC8vIEdldCBJbnB1dCB2YWx1ZVxyXG4gICAgICAgIGNvbnN0IHZhbHVlID0gZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUodGhpcy5jb250ZXh0LmN1c3RvbS50ZXh0RWxlbWVudC52YWx1ZSk7XHJcblxyXG4gICAgICAgIC8vIGluc2VydFxyXG4gICAgICAgIHRoaXMuaW5zZXJ0Tm9kZSh2YWx1ZSk7XHJcblxyXG4gICAgICAgIC8vIGZvY3VzXHJcbiAgICAgICAgdGhpcy5mb2N1cygpO1xyXG4gICAgfVxyXG59OyJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQURBO0FBQ0E7QUFJQTtBQUNBO0FBRUE7QUFHQTtBQUNBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQUE7QUFDQTtBQUlBO0FBQ0E7QUFBQTtBQUNBO0FBRUE7QUFDQTtBQUVBO0FBQ0E7QUFDQTtBQVFBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUVBO0FBQ0E7QUFFQTtBQUNBO0FBL0RBIiwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./test/dev/custom_plugin_submenu.js\n");

/***/ })

/******/ });